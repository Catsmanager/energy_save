{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation, useNavigate } from 'react-router-dom';\nimport './App.css';\nimport smooth from \"./utils/smooth\";\nimport link from \"./utils/link\";\nimport AuthPage from './components/auth/AuthPage';\nimport Main from './components/Main';\nimport ImageUploadCard from './components/card/ImageUploadCard';\nimport Quiz from './components/quiz/Quiz';\nimport Profile from './components/pages/Profile';\nimport DailyQuest from './components/pages/DailyQuest';\nimport BottomNavBar from './components/mobile/BottomNavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userList, setUserList] = useState([]); // userList 상태를 App.js에서 관리\n\n  useEffect(() => {\n    smooth();\n    link();\n  }, []);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // 로그인 여부를 세션이나 로컬 스토리지로 체크\n  const isLoggedIn = !!localStorage.getItem('token');\n\n  // 로그인이 되어 있지 않으면 메인 페이지로 강제 이동\n  useEffect(() => {\n    if (!isLoggedIn && location.pathname !== '/') {\n      navigate('/', {\n        replace: true\n      }); // 히스토리 스택을 쌓지 않고 현재 경로를 덮어씀\n    }\n  }, [isLoggedIn, location.pathname, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(AuthPage, {\n          userList: userList,\n          setUserList: setUserList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quest\",\n        element: /*#__PURE__*/_jsxDEV(DailyQuest, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/imageupload\",\n        element: /*#__PURE__*/_jsxDEV(ImageUploadCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quiz\",\n        element: /*#__PURE__*/_jsxDEV(Quiz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(BottomNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"HWbn9ePecDgKOfsWkAUsO8YqajI=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = App;\nconst RootApp = () => /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 3\n}, this);\n_c2 = RootApp;\nexport default RootApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RootApp\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","useLocation","useNavigate","smooth","link","AuthPage","Main","ImageUploadCard","Quiz","Profile","DailyQuest","BottomNavBar","jsxDEV","_jsxDEV","App","_s","userList","setUserList","location","navigate","isLoggedIn","localStorage","getItem","pathname","replace","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","RootApp","_c2","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useLocation, useNavigate } from 'react-router-dom';\r\nimport './App.css';\r\nimport smooth from \"./utils/smooth\";\r\nimport link from \"./utils/link\";\r\nimport AuthPage from './components/auth/AuthPage';\r\nimport Main from './components/Main';\r\nimport ImageUploadCard from './components/card/ImageUploadCard';\r\nimport Quiz from './components/quiz/Quiz';\r\nimport Profile from './components/pages/Profile';\r\nimport DailyQuest from './components/pages/DailyQuest';\r\nimport BottomNavBar from './components/mobile/BottomNavBar';\r\n\r\nconst App = () => {\r\n  const [userList, setUserList] = useState([]); // userList 상태를 App.js에서 관리\r\n\r\n  useEffect(() => {\r\n    smooth();\r\n    link();\r\n  }, []);\r\n\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  // 로그인 여부를 세션이나 로컬 스토리지로 체크\r\n  const isLoggedIn = !!localStorage.getItem('token'); \r\n\r\n  // 로그인이 되어 있지 않으면 메인 페이지로 강제 이동\r\n  useEffect(() => {\r\n    if (!isLoggedIn && location.pathname !== '/') {\r\n      navigate('/', { replace: true }); // 히스토리 스택을 쌓지 않고 현재 경로를 덮어씀\r\n    }\r\n  }, [isLoggedIn, location.pathname, navigate]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<AuthPage />} />\r\n        <Route path=\"/signup\" element={<AuthPage userList={userList} setUserList={setUserList} />} />\r\n        <Route path=\"/*\" element={<Main />} /> {/* 메인 레이아웃 */}\r\n        <Route path=\"/profile\" element={<Profile />} />\r\n        <Route path=\"/quest\" element={<DailyQuest />} />\r\n        <Route path=\"/imageupload\" element={<ImageUploadCard />} />\r\n        <Route path=\"/quiz\" element={<Quiz />} />\r\n      </Routes>\r\n      {/* 로그인 상태일 때만 BottomNavBar를 보여줌 */}\r\n      {isLoggedIn && <BottomNavBar />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst RootApp = () => (\r\n  <Router>\r\n    <App />\r\n  </Router>\r\n);\r\n\r\nexport default RootApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}