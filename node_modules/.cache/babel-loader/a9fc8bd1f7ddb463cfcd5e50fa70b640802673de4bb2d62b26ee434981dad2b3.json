{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\card\\\\ImageUploadCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../styles/ImageUploadCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageUploadCard = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [ocrResult, setOcrResult] = useState(\"\");\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      const response = await axios.post('http://localhost:8080/api/ocr', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setOcrResult(response.data); // OCR 결과 저장\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"image-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"image-upload-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Image for OCR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleFileChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ocr-result-container\",\n      children: ocrResult && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ocr-result\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"OCR Result:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: ocrResult\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(ImageUploadCard, \"nwuj3DU4sn0PvfwKaY0lTf1FKTM=\");\n_c = ImageUploadCard;\nexport default ImageUploadCard;\nvar _c;\n$RefreshReg$(_c, \"ImageUploadCard\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ImageUploadCard","_s","file","setFile","ocrResult","setOcrResult","handleFileChange","event","target","files","handleSubmit","preventDefault","formData","FormData","append","response","post","headers","data","error","console","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/card/ImageUploadCard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/ImageUploadCard.css';\r\n\r\nconst ImageUploadCard = () => {\r\n    const [file, setFile] = useState(null);\r\n    const [ocrResult, setOcrResult] = useState(\"\");\r\n\r\n    const handleFileChange = (event) => {\r\n        setFile(event.target.files[0]);\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/ocr', formData, {\r\n                headers: {\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            });\r\n\r\n            setOcrResult(response.data); // OCR 결과 저장\r\n        } catch (error) {\r\n            console.error('Error uploading file:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"image-upload-container\">\r\n            <form onSubmit={handleSubmit} className=\"image-upload-card\">\r\n                <h2>Upload Image for OCR</h2>\r\n                <input type=\"file\" onChange={handleFileChange} required />\r\n                <button type=\"submit\">Upload</button>\r\n            </form>\r\n            <div className=\"ocr-result-container\">\r\n                {ocrResult && (\r\n                    <div className=\"ocr-result\">\r\n                        <h3>OCR Result:</h3>\r\n                        <p>{ocrResult}</p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageUploadCard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,gBAAgB,GAAIC,KAAK,IAAK;IAChCJ,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOH,KAAK,IAAK;IAClCA,KAAK,CAACI,cAAc,CAAC,CAAC;IAEtB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEZ,IAAI,CAAC;IAE9B,IAAI;MACA,MAAMa,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,EAAE;QACzEK,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEFZ,YAAY,CAACU,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;IACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,oBACIpB,OAAA;IAAKsB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACnCvB,OAAA;MAAMwB,QAAQ,EAAEb,YAAa;MAACW,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBACvDvB,OAAA;QAAAuB,QAAA,EAAI;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B5B,OAAA;QAAO6B,IAAI,EAAC,MAAM;QAACC,QAAQ,EAAEvB,gBAAiB;QAACwB,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1D5B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACP5B,OAAA;MAAKsB,SAAS,EAAC,sBAAsB;MAAAC,QAAA,EAChClB,SAAS,iBACNL,OAAA;QAAKsB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBvB,OAAA;UAAAuB,QAAA,EAAI;QAAW;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpB5B,OAAA;UAAAuB,QAAA,EAAIlB;QAAS;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA5CID,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AA8CrB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}