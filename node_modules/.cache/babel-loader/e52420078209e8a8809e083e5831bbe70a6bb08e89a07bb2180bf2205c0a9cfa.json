{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\nimport './App.css';\nimport AuthPage from './components/auth/AuthPage';\nimport Main from './components/Main';\nimport ImageUploadCard from './components/card/ImageUploadCard';\nimport Quiz from './components/quiz/Quiz';\nimport Profile from './components/pages/Profile';\nimport DailyQuest from './components/pages/DailyQuest';\nimport BottomNavBar from './components/mobile/BottomNavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsAuthenticated(token !== null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AuthPage, {\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Main, {\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 62\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 113\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 46\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        element: /*#__PURE__*/_jsxDEV(Main, {\n          setIsAuthenticated: setIsAuthenticated\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        element: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 47\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quest\",\n        element: /*#__PURE__*/_jsxDEV(DailyQuest, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/imageupload\",\n        element: /*#__PURE__*/_jsxDEV(ImageUploadCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quiz\",\n        element: /*#__PURE__*/_jsxDEV(Quiz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }, this), location.pathname !== '/' && /*#__PURE__*/_jsxDEV(BottomNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 41\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 7\n  }, this);\n};\n_s(App, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = App;\nconst RootApp = () => /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 3\n}, this);\n_c2 = RootApp;\nexport default RootApp;\n\n// import React, { useEffect, useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\n// import './App.css';\n// // import smooth from \"./utils/smooth\";\n// // import link from \"./utils/link\";\n// import AuthPage from './components/auth/AuthPage';\n// import Main from './components/Main';\n// import ImageUploadCard from './components/card/ImageUploadCard';\n// import Quiz from './components/quiz/Quiz';\n// import Profile from './components/pages/Profile';\n// import DailyQuest from './components/pages/DailyQuest';\n// import BottomNavBar from './components/mobile/BottomNavBar';\n\n// const App = () => {\n//   const [userList, setUserList] = useState([]); // userList 상태를 App.js에서 관리\n\n//   useEffect(() => {\n//     // smooth();\n//     // link();\n//   }, []);\n\n//   // 현재 위치 (URL 경로)를 가져오는 hook\n//   const location = useLocation();\n\n//   // 로그인된 상태인지 체크하는 함수 추가\n//   const isLoggedIn = location.pathname !== '/'; // AuthPage를 제외한 모든 페이지는 로그인 상태로 간주\n//   const isAuthenticated = localStorage.getItem('token') !== null;\n\n//   return (\n//     <div className=\"App\">\n//       <Routes>\n//         <Route path=\"/\" element={<AuthPage />} />\n//         <Route path=\"/main\" element={isAuthenticated ? <Main /> : <Navigate to=\"/\" />} />\n\n//         <Route path=\"/signup\" element={<AuthPage userList={userList} setUserList={setUserList} />} />\n//         <Route path=\"/*\" element={<Main />} /> {/* 메인 레이아웃 */}\n//         <Route path=\"/profile\" element={<Profile />} />\n//         <Route path=\"/quest\" element={<DailyQuest />} />\n//         <Route path=\"/imageupload\" element={<ImageUploadCard />} />\n//         <Route path=\"/quiz\" element={<Quiz />} />\n//       </Routes>\n//       {/* 로그인 상태일 때만 BottomNavBar를 보여줌 */}\n//       {isLoggedIn && <BottomNavBar />}\n//     </div>\n//   );\n// }\n\n// const RootApp = () => (\n//   <Router>\n//     <App />\n//   </Router>\n// );\n\n// export default RootApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RootApp\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","useLocation","Navigate","AuthPage","Main","ImageUploadCard","Quiz","Profile","DailyQuest","BottomNavBar","jsxDEV","_jsxDEV","App","_s","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","to","location","pathname","_c","RootApp","_c2","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\r\nimport './App.css';\r\nimport AuthPage from './components/auth/AuthPage';\r\nimport Main from './components/Main';\r\nimport ImageUploadCard from './components/card/ImageUploadCard';\r\nimport Quiz from './components/quiz/Quiz';\r\nimport Profile from './components/pages/Profile';\r\nimport DailyQuest from './components/pages/DailyQuest';\r\nimport BottomNavBar from './components/mobile/BottomNavBar';\r\n\r\nconst App = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n      const token = localStorage.getItem('token');\r\n      setIsAuthenticated(token !== null);\r\n  }, []);\r\n\r\n  return (\r\n      <div className=\"App\">\r\n          <Routes>\r\n              <Route path=\"/\" element={<AuthPage setIsAuthenticated={setIsAuthenticated} />} />\r\n              <Route path=\"/main\" element={isAuthenticated ? <Main setIsAuthenticated={setIsAuthenticated} /> : <Navigate to=\"/\" />} />\r\n              <Route path=\"/signup\" element={<AuthPage />} />\r\n              <Route path=\"/*\" element={<Main setIsAuthenticated={setIsAuthenticated} />} />\r\n              <Route path=\"/profile\" element={<Profile />} />\r\n              <Route path=\"/quest\" element={<DailyQuest />} />\r\n              <Route path=\"/imageupload\" element={<ImageUploadCard />} />\r\n              <Route path=\"/quiz\" element={<Quiz />} />\r\n          </Routes>\r\n          {location.pathname !== '/' && <BottomNavBar />}\r\n      </div>\r\n  );\r\n}\r\n\r\nconst RootApp = () => (\r\n  <Router>\r\n    <App />\r\n  </Router>\r\n);\r\n\r\nexport default RootApp;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route, useLocation, Navigate } from 'react-router-dom';\r\n// import './App.css';\r\n// // import smooth from \"./utils/smooth\";\r\n// // import link from \"./utils/link\";\r\n// import AuthPage from './components/auth/AuthPage';\r\n// import Main from './components/Main';\r\n// import ImageUploadCard from './components/card/ImageUploadCard';\r\n// import Quiz from './components/quiz/Quiz';\r\n// import Profile from './components/pages/Profile';\r\n// import DailyQuest from './components/pages/DailyQuest';\r\n// import BottomNavBar from './components/mobile/BottomNavBar';\r\n\r\n// const App = () => {\r\n//   const [userList, setUserList] = useState([]); // userList 상태를 App.js에서 관리\r\n\r\n//   useEffect(() => {\r\n//     // smooth();\r\n//     // link();\r\n//   }, []);\r\n\r\n//   // 현재 위치 (URL 경로)를 가져오는 hook\r\n//   const location = useLocation();\r\n\r\n//   // 로그인된 상태인지 체크하는 함수 추가\r\n//   const isLoggedIn = location.pathname !== '/'; // AuthPage를 제외한 모든 페이지는 로그인 상태로 간주\r\n//   const isAuthenticated = localStorage.getItem('token') !== null;\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <Routes>\r\n//         <Route path=\"/\" element={<AuthPage />} />\r\n//         <Route path=\"/main\" element={isAuthenticated ? <Main /> : <Navigate to=\"/\" />} />\r\n\r\n//         <Route path=\"/signup\" element={<AuthPage userList={userList} setUserList={setUserList} />} />\r\n//         <Route path=\"/*\" element={<Main />} /> {/* 메인 레이아웃 */}\r\n//         <Route path=\"/profile\" element={<Profile />} />\r\n//         <Route path=\"/quest\" element={<DailyQuest />} />\r\n//         <Route path=\"/imageupload\" element={<ImageUploadCard />} />\r\n//         <Route path=\"/quiz\" element={<Quiz />} />\r\n//       </Routes>\r\n//       {/* 로그인 상태일 때만 BottomNavBar를 보여줌 */}\r\n//       {isLoggedIn && <BottomNavBar />}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// const RootApp = () => (\r\n//   <Router>\r\n//     <App />\r\n//   </Router>\r\n// );\r\n\r\n// export default RootApp;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}