{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\auth\\\\Signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; // React Router의 useNavigate 훅을 가져옵니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = ({\n  userList,\n  setUserList\n}) => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // useNavigate 훅을 사용하여 페이지 이동 기능을 가져옵니다.\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (password !== confirmPassword) {\n      setError('비밀번호가 일치하지 않습니다.');\n      return;\n    }\n    try {\n      // 이메일 중복 체크\n      const emailCheckResponse = await axios.post('http://localhost:8080/api/auth/check/email', {\n        emailId: email\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (emailCheckResponse.data.exists) {\n        setError('이메일이 이미 존재합니다.');\n        return;\n      }\n\n      // 사용자 데이터 객체 생성\n      const newUser = {\n        emailId: email,\n        username: name,\n        password\n      };\n\n      // JSON 형식으로 서버에 데이터 전송\n      await axios.post('http://localhost:8080/api/auth/signup', newUser, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // 성공적으로 가입한 경우\n      setUserList([...userList, newUser]);\n      setName('');\n      setEmail('');\n      setPassword('');\n      setConfirmPassword('');\n      setError('');\n    } catch (error) {\n      console.error('가입 중 오류 발생:', error);\n      setError('가입 중 오류가 발생했습니다. 다시 시도해 주세요.');\n    }\n\n    // 회원가입 후 홈페이지로 이동\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    id: \"signup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"signup-name\",\n          children: \"\\uC774\\uB984:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"signup-name\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"signup-email\",\n          children: \"\\uC774\\uBA54\\uC77C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"signup-email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"signup-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"signup-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirm-password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm-password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"4hUg7vDAatg6gYL8CJGrfaXhUpM=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Signup","userList","setUserList","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","navigate","handleSubmit","event","preventDefault","emailCheckResponse","post","emailId","headers","data","exists","newUser","username","console","id","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onSubmit","htmlFor","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/auth/Signup.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom'; // React Router의 useNavigate 훅을 가져옵니다.\r\n\r\nconst Signup = ({ userList, setUserList }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [error, setError] = useState('');\r\n  const navigate = useNavigate(); // useNavigate 훅을 사용하여 페이지 이동 기능을 가져옵니다.\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // 이메일 중복 체크\r\n      const emailCheckResponse = await axios.post('http://localhost:8080/api/auth/check/email', {\r\n        emailId: email\r\n      }, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (emailCheckResponse.data.exists) {\r\n        setError('이메일이 이미 존재합니다.');\r\n        return;\r\n      }\r\n\r\n      // 사용자 데이터 객체 생성\r\n      const newUser = {\r\n        emailId: email,\r\n        username: name,\r\n        password\r\n      };\r\n\r\n      // JSON 형식으로 서버에 데이터 전송\r\n      await axios.post('http://localhost:8080/api/auth/signup', newUser, {\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      // 성공적으로 가입한 경우\r\n      setUserList([...userList, newUser]);\r\n      setName('');\r\n      setEmail('');\r\n      setPassword('');\r\n      setConfirmPassword('');\r\n      setError('');\r\n      \r\n    } catch (error) {\r\n      console.error('가입 중 오류 발생:', error);\r\n      setError('가입 중 오류가 발생했습니다. 다시 시도해 주세요.');\r\n    }\r\n  \r\n    // 회원가입 후 홈페이지로 이동\r\n    navigate('/');\r\n  };\r\n\r\n  return (\r\n    <section id=\"signup\">\r\n      <h2>회원가입</h2>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"signup-name\">이름:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"signup-name\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"signup-email\">이메일:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"signup-email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"signup-password\">비밀번호:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"signup-password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"confirm-password\">비밀번호 확인:</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"confirm-password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">회원가입</button>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}