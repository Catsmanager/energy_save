{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\main\\\\CheckList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// 초기 체크리스트 데이터를 제공하는 함수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getDefaultChecklist() {\n  return [{\n    id: 1,\n    text: \"Reduce water usage by 10%\",\n    completed: false\n  }, {\n    id: 2,\n    text: \"Use public transportation 3 times\",\n    completed: false\n  }, {\n    id: 3,\n    text: \"Unplug unused electronics\",\n    completed: false\n  }];\n}\nfunction Checklist() {\n  _s();\n  const [checklist, setChecklist] = useState([]);\n  const [newItem, setNewItem] = useState(\"\"); // 사용자가 입력하는 할 일 텍스트\n\n  // 초기 로딩 시, 체크리스트를 가져오고 리셋 타이밍 확인\n  useEffect(() => {\n    const savedChecklist = JSON.parse(localStorage.getItem('checklist')) || getDefaultChecklist();\n    const lastReset = localStorage.getItem('lastReset');\n    const now = new Date();\n\n    // 하루가 지났으면 체크리스트 리셋\n    if (!lastReset || new Date(lastReset).getDate() !== now.getDate()) {\n      localStorage.setItem('lastReset', now.toISOString()); // 리셋 시간 기록\n      setChecklist(getDefaultChecklist()); // 기본 체크리스트로 리셋\n    } else {\n      setChecklist(savedChecklist); // 저장된 체크리스트 불러오기\n    }\n  }, []);\n\n  // 체크리스트가 업데이트될 때마다 localStorage에 저장\n  useEffect(() => {\n    localStorage.setItem('checklist', JSON.stringify(checklist));\n  }, [checklist]);\n\n  // 할 일 완료 처리\n  const completeItem = id => {\n    setChecklist(prevChecklist => prevChecklist.map(item => item.id === id ? {\n      ...item,\n      completed: true\n    } : item));\n  };\n\n  // 새로운 할 일 추가\n  const addItem = () => {\n    if (newItem.trim() !== \"\") {\n      setChecklist(prevChecklist => [...prevChecklist, {\n        id: Date.now(),\n        text: newItem,\n        completed: false\n      }]);\n      setNewItem(\"\"); // 입력 필드 리셋\n    }\n  };\n\n  // 할 일 삭제\n  const deleteItem = id => {\n    setChecklist(prevChecklist => prevChecklist.filter(item => item.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checklist\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Today's Checklist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newItem,\n        onChange: e => setNewItem(e.target.value),\n        placeholder: \"\\uD560 \\uC77C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addItem,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: checklist.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: item.completed,\n            disabled: item.completed,\n            onChange: () => completeItem(item.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: item.completed ? 'line-through' : 'none'\n            },\n            children: item.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteItem(item.id),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), \" \"]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(Checklist, \"bNhaxz2mp4EF1ggnkEdpo4Earpk=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getDefaultChecklist","id","text","completed","Checklist","_s","checklist","setChecklist","newItem","setNewItem","savedChecklist","JSON","parse","localStorage","getItem","lastReset","now","Date","getDate","setItem","toISOString","stringify","completeItem","prevChecklist","map","item","addItem","trim","deleteItem","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","checked","disabled","style","textDecoration","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/main/CheckList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// 초기 체크리스트 데이터를 제공하는 함수\r\nfunction getDefaultChecklist() {\r\n  return [\r\n    { id: 1, text: \"Reduce water usage by 10%\", completed: false },\r\n    { id: 2, text: \"Use public transportation 3 times\", completed: false },\r\n    { id: 3, text: \"Unplug unused electronics\", completed: false },\r\n  ];\r\n}\r\n\r\nfunction Checklist() {\r\n  const [checklist, setChecklist] = useState([]);\r\n  const [newItem, setNewItem] = useState(\"\"); // 사용자가 입력하는 할 일 텍스트\r\n\r\n  // 초기 로딩 시, 체크리스트를 가져오고 리셋 타이밍 확인\r\n  useEffect(() => {\r\n    const savedChecklist = JSON.parse(localStorage.getItem('checklist')) || getDefaultChecklist();\r\n    const lastReset = localStorage.getItem('lastReset');\r\n    const now = new Date();\r\n\r\n    // 하루가 지났으면 체크리스트 리셋\r\n    if (!lastReset || new Date(lastReset).getDate() !== now.getDate()) {\r\n      localStorage.setItem('lastReset', now.toISOString()); // 리셋 시간 기록\r\n      setChecklist(getDefaultChecklist()); // 기본 체크리스트로 리셋\r\n    } else {\r\n      setChecklist(savedChecklist); // 저장된 체크리스트 불러오기\r\n    }\r\n  }, []);\r\n\r\n  // 체크리스트가 업데이트될 때마다 localStorage에 저장\r\n  useEffect(() => {\r\n    localStorage.setItem('checklist', JSON.stringify(checklist));\r\n  }, [checklist]);\r\n\r\n  // 할 일 완료 처리\r\n  const completeItem = (id) => {\r\n    setChecklist((prevChecklist) =>\r\n      prevChecklist.map((item) =>\r\n        item.id === id ? { ...item, completed: true } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // 새로운 할 일 추가\r\n  const addItem = () => {\r\n    if (newItem.trim() !== \"\") {\r\n      setChecklist((prevChecklist) => [\r\n        ...prevChecklist,\r\n        { id: Date.now(), text: newItem, completed: false },\r\n      ]);\r\n      setNewItem(\"\"); // 입력 필드 리셋\r\n    }\r\n  };\r\n\r\n  // 할 일 삭제\r\n  const deleteItem = (id) => {\r\n    setChecklist((prevChecklist) => prevChecklist.filter((item) => item.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"checklist\">\r\n      <h2>Today's Checklist</h2>\r\n      <div className=\"add-item\">\r\n        <input\r\n          type=\"text\"\r\n          value={newItem}\r\n          onChange={(e) => setNewItem(e.target.value)}\r\n          placeholder=\"할 일 추가\"\r\n        />\r\n        <button onClick={addItem}>추가</button> {/* 할 일 추가 버튼 */}\r\n      </div>\r\n      <ul>\r\n        {checklist.map((item) => (\r\n          <li key={item.id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={item.completed}\r\n                disabled={item.completed}\r\n                onChange={() => completeItem(item.id)}\r\n              />\r\n              <span style={{ textDecoration: item.completed ? 'line-through' : 'none' }}>\r\n                {item.text}\r\n              </span>\r\n            </label>\r\n            <button onClick={() => deleteItem(item.id)}>삭제</button> {/* 삭제 버튼 */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Checklist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}