{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\main\\\\CheckList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n// 주간 퀘스트 데이터를 제공하는 함수\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction getWeeklyQuests() {\n  return [{\n    id: 1,\n    text: \"Reduce water usage by 10%\",\n    completed: false\n  }, {\n    id: 2,\n    text: \"Use public transportation 3 times\",\n    completed: false\n  }, {\n    id: 3,\n    text: \"Unplug unused electronics\",\n    completed: false\n  }];\n}\nfunction WeeklyQuest() {\n  _s();\n  const [quests, setQuests] = useState([]);\n  const [newQuest, setNewQuest] = useState(\"\"); // 사용자가 입력하는 퀘스트 텍스트\n\n  useEffect(() => {\n    // localStorage에서 퀘스트 가져오기\n    const savedQuests = JSON.parse(localStorage.getItem('quests')) || getWeeklyQuests();\n    const lastReset = localStorage.getItem('lastReset');\n    const now = new Date();\n\n    // 하루가 지났으면 퀘스트 리셋\n    if (!lastReset || new Date(lastReset).getDate() !== now.getDate()) {\n      localStorage.setItem('lastReset', now.toISOString()); // 리셋 시간 기록\n      setQuests(getWeeklyQuests()); // 퀘스트 리셋\n    } else {\n      setQuests(savedQuests);\n    }\n  }, []);\n  useEffect(() => {\n    // 퀘스트가 업데이트될 때마다 localStorage에 저장\n    localStorage.setItem('quests', JSON.stringify(quests));\n  }, [quests]);\n  const completeQuest = id => {\n    setQuests(prevQuests => prevQuests.map(quest => quest.id === id ? {\n      ...quest,\n      completed: true\n    } : quest));\n  };\n  const addQuest = () => {\n    if (newQuest.trim() !== \"\") {\n      setQuests(prevQuests => [...prevQuests, {\n        id: Date.now(),\n        text: newQuest,\n        completed: false\n      }]);\n      setNewQuest(\"\"); // 입력 필드 리셋\n    }\n  };\n  const deleteQuest = id => {\n    setQuests(prevQuests => prevQuests.filter(quest => quest.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weekly-quest\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Today's CheckList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: quests.map(quest => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: quest.completed,\n            disabled: quest.completed,\n            onChange: () => completeQuest(quest.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              textDecoration: quest.completed ? 'line-through' : 'none'\n            },\n            children: quest.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteQuest(quest.id),\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \" \"]\n      }, quest.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newQuest,\n        onChange: e => setNewQuest(e.target.value),\n        placeholder: \"\\uD560 \\uC77C \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addQuest,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(WeeklyQuest, \"d20lWBZpZjDDLmQ1CgXwVTBXHDc=\");\n_c = WeeklyQuest;\nexport default WeeklyQuest;\n\n// import React, { useState, useEffect } from 'react';\n\n// // 주간 퀘스트 데이터를 제공하는 함수\n// function getWeeklyQuests(weekNumber) {\n//   const allQuests = [\n//     [\n//       { id: 1, text: \"Reduce water usage by 10%\", completed: false },\n//       { id: 2, text: \"Use public transportation 3 times\", completed: false },\n//       { id: 3, text: \"Unplug unused electronics\", completed: false },\n//     ],\n//     [\n//       { id: 1, text: \"Use energy-efficient light bulbs\", completed: false },\n//       { id: 2, text: \"Reduce shower time by 5 minutes\", completed: false },\n//       { id: 3, text: \"Turn off electronics when not in use\", completed: false },\n//     ],\n//     [\n//       { id: 1, text: \"Install a programmable thermostat\", completed: false },\n//       { id: 2, text: \"Run your dishwasher only when full\", completed: false },\n//       { id: 3, text: \"Switch to reusable shopping bags\", completed: false },\n//     ],\n//     // 주간퀘스트 추가 가능..\n//   ];\n\n//   return allQuests[weekNumber % allQuests.length];\n// }\n\n// function WeeklyQuest() {\n//   const [quests, setQuests] = useState([]);\n\n//   useEffect(() => {\n//     const now = new Date();\n//     const startOfYear = new Date(now.getFullYear(), 0, 1);\n//     const weekNumber = Math.floor((now - startOfYear) / (7 * 24 * 60 * 60 * 1000));\n//     const weeklyQuests = getWeeklyQuests(weekNumber);\n//     setQuests(weeklyQuests);\n//   }, []);\n\n//   const completeQuest = (id) => {\n//     setQuests((prevQuests) =>\n//       prevQuests.map((quest) =>\n//         quest.id === id ? { ...quest, completed: true } : quest\n//       )\n//     );\n//   };\n\n//   return (\n//     <div className=\"weekly-quest\">\n//       <h2>This Week's Quests</h2>\n//       <ul>\n//         {quests.map((quest) => (\n//           <li key={quest.id}>\n//             <label>\n//               <input\n//                 type=\"checkbox\"\n//                 checked={quest.completed}\n//                 disabled={quest.completed}\n//                 onChange={() => completeQuest(quest.id)}\n//               />\n//               <span style={{ textDecoration: quest.completed ? 'line-through' : 'none' }}>\n//                 {quest.text}\n//               </span>\n//             </label>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default WeeklyQuest;\nvar _c;\n$RefreshReg$(_c, \"WeeklyQuest\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","getWeeklyQuests","id","text","completed","WeeklyQuest","_s","quests","setQuests","newQuest","setNewQuest","savedQuests","JSON","parse","localStorage","getItem","lastReset","now","Date","getDate","setItem","toISOString","stringify","completeQuest","prevQuests","map","quest","addQuest","trim","deleteQuest","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","disabled","onChange","style","textDecoration","onClick","value","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/main/CheckList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// 주간 퀘스트 데이터를 제공하는 함수\r\nfunction getWeeklyQuests() {\r\n  return [\r\n    { id: 1, text: \"Reduce water usage by 10%\", completed: false },\r\n    { id: 2, text: \"Use public transportation 3 times\", completed: false },\r\n    { id: 3, text: \"Unplug unused electronics\", completed: false },\r\n  ];\r\n}\r\n\r\nfunction WeeklyQuest() {\r\n  const [quests, setQuests] = useState([]);\r\n  const [newQuest, setNewQuest] = useState(\"\"); // 사용자가 입력하는 퀘스트 텍스트\r\n\r\n  useEffect(() => {\r\n    // localStorage에서 퀘스트 가져오기\r\n    const savedQuests = JSON.parse(localStorage.getItem('quests')) || getWeeklyQuests();\r\n    const lastReset = localStorage.getItem('lastReset');\r\n    const now = new Date();\r\n\r\n    // 하루가 지났으면 퀘스트 리셋\r\n    if (!lastReset || new Date(lastReset).getDate() !== now.getDate()) {\r\n      localStorage.setItem('lastReset', now.toISOString()); // 리셋 시간 기록\r\n      setQuests(getWeeklyQuests()); // 퀘스트 리셋\r\n    } else {\r\n      setQuests(savedQuests);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // 퀘스트가 업데이트될 때마다 localStorage에 저장\r\n    localStorage.setItem('quests', JSON.stringify(quests));\r\n  }, [quests]);\r\n\r\n  const completeQuest = (id) => {\r\n    setQuests((prevQuests) =>\r\n      prevQuests.map((quest) =>\r\n        quest.id === id ? { ...quest, completed: true } : quest\r\n      )\r\n    );\r\n  };\r\n\r\n  const addQuest = () => {\r\n    if (newQuest.trim() !== \"\") {\r\n      setQuests((prevQuests) => [\r\n        ...prevQuests,\r\n        { id: Date.now(), text: newQuest, completed: false },\r\n      ]);\r\n      setNewQuest(\"\"); // 입력 필드 리셋\r\n    }\r\n  };\r\n\r\n  const deleteQuest = (id) => {\r\n    setQuests((prevQuests) => prevQuests.filter((quest) => quest.id !== id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"weekly-quest\">\r\n      <h2>Today's CheckList</h2>\r\n      <ul>\r\n        {quests.map((quest) => (\r\n          <li key={quest.id}>\r\n            <label>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={quest.completed}\r\n                disabled={quest.completed}\r\n                onChange={() => completeQuest(quest.id)}\r\n              />\r\n              <span style={{ textDecoration: quest.completed ? 'line-through' : 'none' }}>\r\n                {quest.text}\r\n              </span>\r\n            </label>\r\n            <button onClick={() => deleteQuest(quest.id)}>삭제</button> {/* 삭제 버튼 */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          value={newQuest}\r\n          onChange={(e) => setNewQuest(e.target.value)}\r\n          placeholder=\"할 일 추가\"\r\n        />\r\n        <button onClick={addQuest}>추가</button> {/* 퀘스트 추가 버튼 */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeeklyQuest;\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n\r\n// // 주간 퀘스트 데이터를 제공하는 함수\r\n// function getWeeklyQuests(weekNumber) {\r\n//   const allQuests = [\r\n//     [\r\n//       { id: 1, text: \"Reduce water usage by 10%\", completed: false },\r\n//       { id: 2, text: \"Use public transportation 3 times\", completed: false },\r\n//       { id: 3, text: \"Unplug unused electronics\", completed: false },\r\n//     ],\r\n//     [\r\n//       { id: 1, text: \"Use energy-efficient light bulbs\", completed: false },\r\n//       { id: 2, text: \"Reduce shower time by 5 minutes\", completed: false },\r\n//       { id: 3, text: \"Turn off electronics when not in use\", completed: false },\r\n//     ],\r\n//     [\r\n//       { id: 1, text: \"Install a programmable thermostat\", completed: false },\r\n//       { id: 2, text: \"Run your dishwasher only when full\", completed: false },\r\n//       { id: 3, text: \"Switch to reusable shopping bags\", completed: false },\r\n//     ],\r\n//     // 주간퀘스트 추가 가능..\r\n//   ];\r\n\r\n//   return allQuests[weekNumber % allQuests.length];\r\n// }\r\n\r\n// function WeeklyQuest() {\r\n//   const [quests, setQuests] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const now = new Date();\r\n//     const startOfYear = new Date(now.getFullYear(), 0, 1);\r\n//     const weekNumber = Math.floor((now - startOfYear) / (7 * 24 * 60 * 60 * 1000));\r\n//     const weeklyQuests = getWeeklyQuests(weekNumber);\r\n//     setQuests(weeklyQuests);\r\n//   }, []);\r\n\r\n//   const completeQuest = (id) => {\r\n//     setQuests((prevQuests) =>\r\n//       prevQuests.map((quest) =>\r\n//         quest.id === id ? { ...quest, completed: true } : quest\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"weekly-quest\">\r\n//       <h2>This Week's Quests</h2>\r\n//       <ul>\r\n//         {quests.map((quest) => (\r\n//           <li key={quest.id}>\r\n//             <label>\r\n//               <input\r\n//                 type=\"checkbox\"\r\n//                 checked={quest.completed}\r\n//                 disabled={quest.completed}\r\n//                 onChange={() => completeQuest(quest.id)}\r\n//               />\r\n//               <span style={{ textDecoration: quest.completed ? 'line-through' : 'none' }}>\r\n//                 {quest.text}\r\n//               </span>\r\n//             </label>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default WeeklyQuest;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}