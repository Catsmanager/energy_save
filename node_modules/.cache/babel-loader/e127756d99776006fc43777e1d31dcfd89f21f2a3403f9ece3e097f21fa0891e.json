{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\auth\\\\AuthPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jwtDecode } from 'jwt-decode'; // JWT 디코딩 라이브러리\nimport '../auth/AuthPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthPage = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const [isLogin, setIsLogin] = useState(true);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const [username, setUsername] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  // 로그인 상태 확인\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      setIsAuthenticated(true);\n      navigate('/main');\n    }\n  }, [navigate, setIsAuthenticated]);\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/auth/login', {\n        emailId: email,\n        password: password\n      });\n      const token = response.data.token;\n      if (!token) {\n        throw new Error('토큰이 없습니다.');\n      }\n      localStorage.setItem('token', token);\n      const decodedToken = jwtDecode(token);\n      setIsAuthenticated(true); // 로그인 성공 시 인증 상태 업데이트\n      navigate('/main');\n    } catch (error) {\n      console.error('로그인 실패:', error.response ? error.response.data : error.message);\n      setError('이메일 또는 비밀번호가 올바르지 않습니다. 다시 시도해주세요.');\n    }\n  };\n  const handleSignup = async e => {\n    e.preventDefault();\n    if (password !== repeatPassword) {\n      setError('비밀번호와 비밀번호 확인이 일치하지 않습니다.');\n      return;\n    }\n    try {\n      const emailCheckResponse = await axios.post('/api/auth/check/email', {\n        emailId: email\n      });\n      if (emailCheckResponse.data.exists) {\n        setError('이메일이 이미 존재합니다.');\n        return;\n      }\n      const newUser = {\n        emailId: email,\n        username: username,\n        password: password\n      };\n      await axios.post('/api/auth/signup', newUser);\n      await handleLogin(e); // 회원가입 후 자동 로그인 처리\n      setIsLogin(true);\n      setError('');\n    } catch (error) {\n      console.error('회원가입 실패:', error.response ? error.response.data : error.message);\n      setError('회원가입에 실패했습니다. 다시 시도해주세요.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-html\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"social-login\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"login-with-text\",\n          style: {\n            marginBottom: '30px',\n            marginLeft: '-200px',\n            fontWeight: 'bold'\n          },\n          children: isLogin ? 'Login with' : 'Register with'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"social-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"social-button instagram-button\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-instagram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"social-button google-button\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"social-button github-button\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fab fa-github\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"or-separator\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sign-in-htm\",\n          style: {\n            display: isLogin ? 'block' : 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleLogin,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"login-email\",\n                className: \"label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"login-email\",\n                type: \"email\",\n                className: \"input\",\n                placeholder: \"Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"login-password\",\n                className: \"label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"login-password\",\n                type: \"password\",\n                className: \"input\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"check\",\n                type: \"checkbox\",\n                className: \"check\",\n                defaultChecked: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"check\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 40\n                }, this), \" \\uC554\\uD638 \\uAE30\\uC5B5\\uD558\\uAE30\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"button\",\n                value: \"LOGIN\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 25\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"foot-lnk\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uB098\\uC694?\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setIsLogin(false),\n                style: {\n                  color: '#42b846',\n                  cursor: 'pointer'\n                },\n                children: \"Create Account\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => navigate('/search_email'),\n                style: {\n                  color: 'black',\n                  cursor: 'pointer',\n                  marginRight: '10px'\n                },\n                children: \"\\uC774\\uBA54\\uC77C\\uC744 \\uC78A\\uC5C8\\uB098\\uC694?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), \"/\", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => navigate('/search_password'),\n                style: {\n                  color: 'black',\n                  cursor: 'pointer',\n                  marginLeft: '10px'\n                },\n                children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uB97C \\uC78A\\uC5C8\\uB098\\uC694?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sign-up-htm\",\n          style: {\n            display: !isLogin ? 'block' : 'none'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSignup,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"signup-username\",\n                className: \"label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"signup-username\",\n                type: \"text\",\n                className: \"input\",\n                placeholder: \"Username\",\n                value: username,\n                onChange: e => setUsername(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"signup-email\",\n                className: \"label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"signup-email\",\n                type: \"email\",\n                className: \"input\",\n                placeholder: \"Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"signup-password\",\n                className: \"label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"signup-password\",\n                type: \"password\",\n                className: \"input\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"repeat-password\",\n                className: \"label\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"repeat-password\",\n                type: \"password\",\n                className: \"input\",\n                placeholder: \"Repeat password\",\n                value: repeatPassword,\n                onChange: e => setRepeatPassword(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"group\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                className: \"button\",\n                value: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: 'red'\n              },\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 25\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"foot-lnk\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"\\uC774\\uBBF8 \\uACC4\\uC815\\uC774 \\uC788\\uB098\\uC694? \", /*#__PURE__*/_jsxDEV(\"span\", {\n                onClick: () => setIsLogin(true),\n                style: {\n                  color: '#42b846',\n                  cursor: 'pointer'\n                },\n                children: \"Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 30\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthPage, \"/sftt9avlKkumPfXd9YuYmiaoSM=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthPage;\nexport default AuthPage;\n\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import axios from 'axios';\n// import '../auth/AuthPage.css'; \n\n// const AuthPage = () => {\n//   const [isLogin, setIsLogin] = useState(true); // 로그인/회원가입 상태 관리\n//   const [email, setEmail] = useState(''); // 이메일 상태\n//   const [password, setPassword] = useState(''); // 비밀번호 상태\n//   const [repeatPassword, setRepeatPassword] = useState(''); // 비밀번호 확인 상태\n//   const [username, setUsername] = useState(''); // 회원가입을 위한 사용자 이름 상태\n//   const [error, setError] = useState(''); // 에러 메시지 상태\n\n//   const navigate = useNavigate(); // 페이지 이동을 위한 네비게이션\n\n//   // 로그인 처리 함수\n//   const handleLogin = async (e) => {\n//     e.preventDefault();\n\n//     try {\n//       const response = await axios.post('/api/auth/login', {\n//         emailId: email,\n//         password: password,\n//       });\n\n//       //console.log('로그인 성공:', response.data);\n//       navigate('/home', { state: { email } });\n//     } catch (error) {\n//       console.error('로그인 실패:', error.response ? error.response.data : error.message);\n//       setError('로그인에 실패했습니다. 다시 시도해주세요.');\n//     }\n//   };\n\n//   // 회원가입 처리 함수\n//   const handleSignup = async (e) => {\n//     e.preventDefault();\n\n//     if (password !== repeatPassword) {\n//       setError('비밀번호와 비밀번호 확인이 일치하지 않습니다.');\n//       return;\n//     }\n\n//     try {\n//       // 이메일 중복 체크\n//       const emailCheckResponse = await axios.post('/api/auth/check/email', {\n//         emailId: email\n//       }, {\n//         headers: {\n//           'Content-Type': 'application/json'\n//         }\n//       });\n\n//       if (emailCheckResponse.data.exists) {\n//         setError('이메일이 이미 존재합니다.');\n//         return;\n//       }\n\n//       // 사용자 데이터 객체 생성\n//       const newUser = {\n//         emailId: email,\n//         username: username,\n//         password: password\n//       };\n\n//       // JSON 형식으로 서버에 데이터 전송\n//       await axios.post('/api/auth/signup', newUser, {\n//         headers: {\n//           'Content-Type': 'application/json'\n//         }\n//       });\n\n//       console.log('회원가입 성공:', newUser);\n//       setIsLogin(true); // 회원가입 성공 시 로그인 폼으로 전환\n//       setError(''); // 에러 메시지 초기화\n//     } catch (error) {\n//       console.error('회원가입 실패:', error.response ? error.response.data : error.message);\n//       setError('회원가입에 실패했습니다. 다시 시도해주세요.');\n//     }\n//   };\n\n//   return (\n//     <div className=\"login-wrap\">\n//       <div className=\"login-html\">\n//         {/* 소셜 로그인 영역 */}\n//         <div className=\"social-login\">\n//           {/* login with 텍스트를 소셜 버튼 위쪽에 살짝 왼쪽으로 배치 */}\n//           <p className=\"login-with-text\" style={{ marginBottom: '30px', marginLeft: '-200px' , fontWeight: 'bold' }}>\n//             {isLogin ? 'Login with' : 'Register with'}\n//           </p>\n\n//           <div className=\"social-buttons\">\n//             <button className=\"social-button instagram-button\">\n//               <i className=\"fab fa-instagram\"></i>\n//             </button>\n//             <button className=\"social-button google-button\">\n//               <i className=\"fab fa-google\"></i>\n//             </button>\n//             <button className=\"social-button github-button\">\n//               <i className=\"fab fa-github\"></i>\n//             </button>\n//           </div>\n//         </div>\n\n//         {/* 분리선 */}\n//         <div className=\"or-separator\">\n//           <span>or</span>\n//         </div>\n\n//         {/* 로그인 폼 */}\n//         <div className=\"login-form\">\n//           <div className=\"sign-in-htm\" style={{ display: isLogin ? 'block' : 'none' }}>\n//             <form onSubmit={handleLogin}>\n//               <div className=\"group\">\n//                 <label htmlFor=\"login-email\" className=\"label\"></label>\n//                 <input\n//                   id=\"login-email\"\n//                   type=\"email\"\n//                   className=\"input\"\n//                   placeholder=\"Email\"\n//                   value={email}\n//                   onChange={(e) => setEmail(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"group\">\n//                 <label htmlFor=\"login-password\" className=\"label\"></label>\n//                 <input\n//                   id=\"login-password\"\n//                   type=\"password\"\n//                   className=\"input\"\n//                   placeholder=\"Password\"\n//                   value={password}\n//                   onChange={(e) => setPassword(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"group\">\n//                 <input id=\"check\" type=\"checkbox\" className=\"check\" defaultChecked />\n//                 <label htmlFor=\"check\"><span className=\"icon\"></span> 암호 기억하기</label>\n//               </div>\n//               <div className=\"group\">\n//                 <input type=\"submit\" className=\"button\" value=\"LOGIN\" />\n//               </div>\n//               {error && <p style={{ color: 'red' }}>{error}</p>} {/* 에러 메시지 표시 */}\n//             </form>\n\n//                     <div className=\"foot-lnk\">\n//               <p>\n//                 계정이 없나요?{' '}\n//                 <span\n//                   onClick={() => setIsLogin(false)}\n//                   style={{ color: '#42b846', cursor: 'pointer' }}\n//                 >\n//                   Create Account\n//                 </span>\n//               </p>\n//               {/* 한 줄 띄우기 */}\n//               <br />\n//               <p>\n//                 <span\n//                   onClick={() => navigate('/search_email')}\n//                   style={{ color: 'black', cursor: 'pointer', marginRight: '10px' }}\n//                 >\n//                   이메일을 잊었나요?\n//                 </span>\n//                 /\n//                 <span\n//                   onClick={() => navigate('/search_password')}\n//                   style={{ color: 'black', cursor: 'pointer', marginLeft: '10px' }}\n//                 >\n//                   비밀번호를 잊었나요?\n//                 </span>\n//               </p>\n//             </div>\n//           </div>\n\n//           {/* 회원가입 폼 */}\n//           <div className=\"sign-up-htm\" style={{ display: !isLogin ? 'block' : 'none' }}>\n//             <form onSubmit={handleSignup}>\n//               <div className=\"group\">\n//                 <label htmlFor=\"signup-username\" className=\"label\"></label>\n//                 <input\n//                   id=\"signup-username\"\n//                   type=\"text\"\n//                   className=\"input\"\n//                   placeholder=\"Username\"\n//                   value={username}\n//                   onChange={(e) => setUsername(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"group\">\n//                 <label htmlFor=\"signup-email\" className=\"label\"></label>\n//                 <input\n//                   id=\"signup-email\"\n//                   type=\"email\"\n//                   className=\"input\"\n//                   placeholder=\"Email\"\n//                   value={email}\n//                   onChange={(e) => setEmail(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"group\">\n//                 <label htmlFor=\"signup-password\" className=\"label\"></label>\n//                 <input\n//                   id=\"signup-password\"\n//                   type=\"password\"\n//                   className=\"input\"\n//                   placeholder=\"Password\"\n//                   value={password}\n//                   onChange={(e) => setPassword(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"group\">\n//                 <label htmlFor=\"repeat-password\" className=\"label\"></label>\n//                 <input\n//                   id=\"repeat-password\"\n//                   type=\"password\"\n//                   className=\"input\"\n//                   placeholder=\"Repeat password\"\n//                   value={repeatPassword}\n//                   onChange={(e) => setRepeatPassword(e.target.value)}\n//                   required\n//                 />\n//               </div>\n//               <div className=\"group\">\n//                 <input type=\"submit\" className=\"button\" value=\"Sign Up\" />\n//               </div>\n//               {error && <p style={{ color: 'red' }}>{error}</p>} {/* 에러 메시지 표시 */}\n//             </form>\n\n//             <div className=\"foot-lnk\">\n//               <p>이미 계정이 있나요? <span onClick={() => setIsLogin(true)} style={{ color: '#42b846', cursor: 'pointer' }}>Sign In</span></p>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AuthPage;\nvar _c;\n$RefreshReg$(_c, \"AuthPage\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jwtDecode","jsxDEV","_jsxDEV","AuthPage","setIsAuthenticated","_s","isLogin","setIsLogin","email","setEmail","password","setPassword","repeatPassword","setRepeatPassword","username","setUsername","error","setError","navigate","useEffect","token","localStorage","getItem","handleLogin","e","preventDefault","response","post","emailId","data","Error","setItem","decodedToken","console","message","handleSignup","emailCheckResponse","exists","newUser","className","children","style","marginBottom","marginLeft","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","display","onSubmit","htmlFor","id","type","placeholder","value","onChange","target","required","defaultChecked","color","onClick","cursor","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/auth/AuthPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { jwtDecode } from 'jwt-decode'; // JWT 디코딩 라이브러리\r\nimport '../auth/AuthPage.css';\r\n\r\nconst AuthPage = ({ setIsAuthenticated }) => {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [repeatPassword, setRepeatPassword] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [error, setError] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  // 로그인 상태 확인\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsAuthenticated(true);\r\n      navigate('/main');\r\n    }\r\n  }, [navigate, setIsAuthenticated]);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('/api/auth/login', {\r\n        emailId: email,\r\n        password: password,\r\n      });\r\n\r\n      const token = response.data.token;\r\n      if (!token) {\r\n        throw new Error('토큰이 없습니다.');\r\n      }\r\n\r\n      localStorage.setItem('token', token);\r\n      const decodedToken = jwtDecode(token);\r\n      setIsAuthenticated(true); // 로그인 성공 시 인증 상태 업데이트\r\n      navigate('/main');\r\n    } catch (error) {\r\n      console.error('로그인 실패:', error.response ? error.response.data : error.message);\r\n      setError('이메일 또는 비밀번호가 올바르지 않습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  const handleSignup = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== repeatPassword) {\r\n      setError('비밀번호와 비밀번호 확인이 일치하지 않습니다.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const emailCheckResponse = await axios.post('/api/auth/check/email', {\r\n        emailId: email,\r\n      });\r\n\r\n      if (emailCheckResponse.data.exists) {\r\n        setError('이메일이 이미 존재합니다.');\r\n        return;\r\n      }\r\n\r\n      const newUser = {\r\n        emailId: email,\r\n        username: username,\r\n        password: password,\r\n      };\r\n\r\n      await axios.post('/api/auth/signup', newUser);\r\n      await handleLogin(e); // 회원가입 후 자동 로그인 처리\r\n      setIsLogin(true);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error('회원가입 실패:', error.response ? error.response.data : error.message);\r\n      setError('회원가입에 실패했습니다. 다시 시도해주세요.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-wrap\">\r\n      <div className=\"login-html\">\r\n        {/* 소셜 로그인 영역 */}\r\n        <div className=\"social-login\">\r\n          {/* login with 텍스트를 소셜 버튼 위쪽에 살짝 왼쪽으로 배치 */}\r\n          <p className=\"login-with-text\" style={{ marginBottom: '30px', marginLeft: '-200px' , fontWeight: 'bold' }}>\r\n            {isLogin ? 'Login with' : 'Register with'}\r\n          </p>\r\n          \r\n          <div className=\"social-buttons\">\r\n            <button className=\"social-button instagram-button\">\r\n              <i className=\"fab fa-instagram\"></i>\r\n            </button>\r\n            <button className=\"social-button google-button\">\r\n              <i className=\"fab fa-google\"></i>\r\n            </button>\r\n            <button className=\"social-button github-button\">\r\n              <i className=\"fab fa-github\"></i>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* 분리선 */}\r\n        <div className=\"or-separator\">\r\n          <span>or</span>\r\n        </div>\r\n\r\n        {/* 로그인 폼 */}\r\n        <div className=\"login-form\">\r\n          <div className=\"sign-in-htm\" style={{ display: isLogin ? 'block' : 'none' }}>\r\n            <form onSubmit={handleLogin}>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"login-email\" className=\"label\"></label>\r\n                <input\r\n                  id=\"login-email\"\r\n                  type=\"email\"\r\n                  className=\"input\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"login-password\" className=\"label\"></label>\r\n                <input\r\n                  id=\"login-password\"\r\n                  type=\"password\"\r\n                  className=\"input\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input id=\"check\" type=\"checkbox\" className=\"check\" defaultChecked />\r\n                <label htmlFor=\"check\"><span className=\"icon\"></span> 암호 기억하기</label>\r\n              </div>\r\n              <div className=\"group\">\r\n                <input type=\"submit\" className=\"button\" value=\"LOGIN\" />\r\n              </div>\r\n              {error && <p style={{ color: 'red' }}>{error}</p>} {/* 에러 메시지 표시 */}\r\n            </form>\r\n\r\n                    <div className=\"foot-lnk\">\r\n              <p>\r\n                계정이 없나요?{' '}\r\n                <span\r\n                  onClick={() => setIsLogin(false)}\r\n                  style={{ color: '#42b846', cursor: 'pointer' }}\r\n                >\r\n                  Create Account\r\n                </span>\r\n              </p>\r\n              {/* 한 줄 띄우기 */}\r\n              <br />\r\n              <p>\r\n                <span\r\n                  onClick={() => navigate('/search_email')}\r\n                  style={{ color: 'black', cursor: 'pointer', marginRight: '10px' }}\r\n                >\r\n                  이메일을 잊었나요?\r\n                </span>\r\n                /\r\n                <span\r\n                  onClick={() => navigate('/search_password')}\r\n                  style={{ color: 'black', cursor: 'pointer', marginLeft: '10px' }}\r\n                >\r\n                  비밀번호를 잊었나요?\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n\r\n          {/* 회원가입 폼 */}\r\n          <div className=\"sign-up-htm\" style={{ display: !isLogin ? 'block' : 'none' }}>\r\n            <form onSubmit={handleSignup}>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"signup-username\" className=\"label\"></label>\r\n                <input\r\n                  id=\"signup-username\"\r\n                  type=\"text\"\r\n                  className=\"input\"\r\n                  placeholder=\"Username\"\r\n                  value={username}\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"signup-email\" className=\"label\"></label>\r\n                <input\r\n                  id=\"signup-email\"\r\n                  type=\"email\"\r\n                  className=\"input\"\r\n                  placeholder=\"Email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"signup-password\" className=\"label\"></label>\r\n                <input\r\n                  id=\"signup-password\"\r\n                  type=\"password\"\r\n                  className=\"input\"\r\n                  placeholder=\"Password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <label htmlFor=\"repeat-password\" className=\"label\"></label>\r\n                <input\r\n                  id=\"repeat-password\"\r\n                  type=\"password\"\r\n                  className=\"input\"\r\n                  placeholder=\"Repeat password\"\r\n                  value={repeatPassword}\r\n                  onChange={(e) => setRepeatPassword(e.target.value)}\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input type=\"submit\" className=\"button\" value=\"Sign Up\" />\r\n              </div>\r\n              {error && <p style={{ color: 'red' }}>{error}</p>} {/* 에러 메시지 표시 */}\r\n            </form>\r\n\r\n            <div className=\"foot-lnk\">\r\n              <p>이미 계정이 있나요? <span onClick={() => setIsLogin(true)} style={{ color: '#42b846', cursor: 'pointer' }}>Sign In</span></p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n\r\n\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import axios from 'axios';\r\n// import '../auth/AuthPage.css'; \r\n\r\n// const AuthPage = () => {\r\n//   const [isLogin, setIsLogin] = useState(true); // 로그인/회원가입 상태 관리\r\n//   const [email, setEmail] = useState(''); // 이메일 상태\r\n//   const [password, setPassword] = useState(''); // 비밀번호 상태\r\n//   const [repeatPassword, setRepeatPassword] = useState(''); // 비밀번호 확인 상태\r\n//   const [username, setUsername] = useState(''); // 회원가입을 위한 사용자 이름 상태\r\n//   const [error, setError] = useState(''); // 에러 메시지 상태\r\n\r\n//   const navigate = useNavigate(); // 페이지 이동을 위한 네비게이션\r\n\r\n//   // 로그인 처리 함수\r\n//   const handleLogin = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     try {\r\n//       const response = await axios.post('/api/auth/login', {\r\n//         emailId: email,\r\n//         password: password,\r\n//       });\r\n\r\n//       //console.log('로그인 성공:', response.data);\r\n//       navigate('/home', { state: { email } });\r\n//     } catch (error) {\r\n//       console.error('로그인 실패:', error.response ? error.response.data : error.message);\r\n//       setError('로그인에 실패했습니다. 다시 시도해주세요.');\r\n//     }\r\n//   };\r\n\r\n//   // 회원가입 처리 함수\r\n//   const handleSignup = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     if (password !== repeatPassword) {\r\n//       setError('비밀번호와 비밀번호 확인이 일치하지 않습니다.');\r\n//       return;\r\n//     }\r\n\r\n//     try {\r\n//       // 이메일 중복 체크\r\n//       const emailCheckResponse = await axios.post('/api/auth/check/email', {\r\n//         emailId: email\r\n//       }, {\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         }\r\n//       });\r\n\r\n//       if (emailCheckResponse.data.exists) {\r\n//         setError('이메일이 이미 존재합니다.');\r\n//         return;\r\n//       }\r\n\r\n//       // 사용자 데이터 객체 생성\r\n//       const newUser = {\r\n//         emailId: email,\r\n//         username: username,\r\n//         password: password\r\n//       };\r\n\r\n//       // JSON 형식으로 서버에 데이터 전송\r\n//       await axios.post('/api/auth/signup', newUser, {\r\n//         headers: {\r\n//           'Content-Type': 'application/json'\r\n//         }\r\n//       });\r\n\r\n//       console.log('회원가입 성공:', newUser);\r\n//       setIsLogin(true); // 회원가입 성공 시 로그인 폼으로 전환\r\n//       setError(''); // 에러 메시지 초기화\r\n//     } catch (error) {\r\n//       console.error('회원가입 실패:', error.response ? error.response.data : error.message);\r\n//       setError('회원가입에 실패했습니다. 다시 시도해주세요.');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"login-wrap\">\r\n//       <div className=\"login-html\">\r\n//         {/* 소셜 로그인 영역 */}\r\n//         <div className=\"social-login\">\r\n//           {/* login with 텍스트를 소셜 버튼 위쪽에 살짝 왼쪽으로 배치 */}\r\n//           <p className=\"login-with-text\" style={{ marginBottom: '30px', marginLeft: '-200px' , fontWeight: 'bold' }}>\r\n//             {isLogin ? 'Login with' : 'Register with'}\r\n//           </p>\r\n          \r\n//           <div className=\"social-buttons\">\r\n//             <button className=\"social-button instagram-button\">\r\n//               <i className=\"fab fa-instagram\"></i>\r\n//             </button>\r\n//             <button className=\"social-button google-button\">\r\n//               <i className=\"fab fa-google\"></i>\r\n//             </button>\r\n//             <button className=\"social-button github-button\">\r\n//               <i className=\"fab fa-github\"></i>\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n\r\n//         {/* 분리선 */}\r\n//         <div className=\"or-separator\">\r\n//           <span>or</span>\r\n//         </div>\r\n\r\n//         {/* 로그인 폼 */}\r\n//         <div className=\"login-form\">\r\n//           <div className=\"sign-in-htm\" style={{ display: isLogin ? 'block' : 'none' }}>\r\n//             <form onSubmit={handleLogin}>\r\n//               <div className=\"group\">\r\n//                 <label htmlFor=\"login-email\" className=\"label\"></label>\r\n//                 <input\r\n//                   id=\"login-email\"\r\n//                   type=\"email\"\r\n//                   className=\"input\"\r\n//                   placeholder=\"Email\"\r\n//                   value={email}\r\n//                   onChange={(e) => setEmail(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"group\">\r\n//                 <label htmlFor=\"login-password\" className=\"label\"></label>\r\n//                 <input\r\n//                   id=\"login-password\"\r\n//                   type=\"password\"\r\n//                   className=\"input\"\r\n//                   placeholder=\"Password\"\r\n//                   value={password}\r\n//                   onChange={(e) => setPassword(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"group\">\r\n//                 <input id=\"check\" type=\"checkbox\" className=\"check\" defaultChecked />\r\n//                 <label htmlFor=\"check\"><span className=\"icon\"></span> 암호 기억하기</label>\r\n//               </div>\r\n//               <div className=\"group\">\r\n//                 <input type=\"submit\" className=\"button\" value=\"LOGIN\" />\r\n//               </div>\r\n//               {error && <p style={{ color: 'red' }}>{error}</p>} {/* 에러 메시지 표시 */}\r\n//             </form>\r\n\r\n//                     <div className=\"foot-lnk\">\r\n//               <p>\r\n//                 계정이 없나요?{' '}\r\n//                 <span\r\n//                   onClick={() => setIsLogin(false)}\r\n//                   style={{ color: '#42b846', cursor: 'pointer' }}\r\n//                 >\r\n//                   Create Account\r\n//                 </span>\r\n//               </p>\r\n//               {/* 한 줄 띄우기 */}\r\n//               <br />\r\n//               <p>\r\n//                 <span\r\n//                   onClick={() => navigate('/search_email')}\r\n//                   style={{ color: 'black', cursor: 'pointer', marginRight: '10px' }}\r\n//                 >\r\n//                   이메일을 잊었나요?\r\n//                 </span>\r\n//                 /\r\n//                 <span\r\n//                   onClick={() => navigate('/search_password')}\r\n//                   style={{ color: 'black', cursor: 'pointer', marginLeft: '10px' }}\r\n//                 >\r\n//                   비밀번호를 잊었나요?\r\n//                 </span>\r\n//               </p>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* 회원가입 폼 */}\r\n//           <div className=\"sign-up-htm\" style={{ display: !isLogin ? 'block' : 'none' }}>\r\n//             <form onSubmit={handleSignup}>\r\n//               <div className=\"group\">\r\n//                 <label htmlFor=\"signup-username\" className=\"label\"></label>\r\n//                 <input\r\n//                   id=\"signup-username\"\r\n//                   type=\"text\"\r\n//                   className=\"input\"\r\n//                   placeholder=\"Username\"\r\n//                   value={username}\r\n//                   onChange={(e) => setUsername(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"group\">\r\n//                 <label htmlFor=\"signup-email\" className=\"label\"></label>\r\n//                 <input\r\n//                   id=\"signup-email\"\r\n//                   type=\"email\"\r\n//                   className=\"input\"\r\n//                   placeholder=\"Email\"\r\n//                   value={email}\r\n//                   onChange={(e) => setEmail(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"group\">\r\n//                 <label htmlFor=\"signup-password\" className=\"label\"></label>\r\n//                 <input\r\n//                   id=\"signup-password\"\r\n//                   type=\"password\"\r\n//                   className=\"input\"\r\n//                   placeholder=\"Password\"\r\n//                   value={password}\r\n//                   onChange={(e) => setPassword(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"group\">\r\n//                 <label htmlFor=\"repeat-password\" className=\"label\"></label>\r\n//                 <input\r\n//                   id=\"repeat-password\"\r\n//                   type=\"password\"\r\n//                   className=\"input\"\r\n//                   placeholder=\"Repeat password\"\r\n//                   value={repeatPassword}\r\n//                   onChange={(e) => setRepeatPassword(e.target.value)}\r\n//                   required\r\n//                 />\r\n//               </div>\r\n//               <div className=\"group\">\r\n//                 <input type=\"submit\" className=\"button\" value=\"Sign Up\" />\r\n//               </div>\r\n//               {error && <p style={{ color: 'red' }}>{error}</p>} {/* 에러 메시지 표시 */}\r\n//             </form>\r\n\r\n//             <div className=\"foot-lnk\">\r\n//               <p>이미 계정이 있나요? <span onClick={() => setIsLogin(true)} style={{ color: '#42b846', cursor: 'pointer' }}>Sign In</span></p>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AuthPage;"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}