{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\nimport './App.css';\nimport smooth from \"./utils/smooth\";\nimport link from \"./utils/link\";\nimport AuthPage from './components/auth/AuthPage';\nimport Main from './components/Main';\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport ImageUploadCard from './components/card/ImageUploadCard';\nimport Quiz from './components/quiz/Quiz';\nimport BottomNavBar from './components/main/BottomNavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userList, setUserList] = useState([]); // userList 상태를 App.js에서 관리\n\n  useEffect(() => {\n    smooth();\n    link();\n  }, []);\n\n  // 현재 위치 (URL 경로)를 가져오는 hook\n  const location = useLocation();\n\n  // 로그인된 상태인지 체크하는 함수 추가\n  const isLoggedIn = location.pathname !== '/'; // AuthPage를 제외한 모든 페이지는 로그인 상태로 간주\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(AuthPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {\n          userList: userList,\n          setUserList: setUserList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/main\",\n        element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/imageupload\",\n        element: /*#__PURE__*/_jsxDEV(ImageUploadCard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quiz\",\n        element: /*#__PURE__*/_jsxDEV(Quiz, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(BottomNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"z/DS55XUOTBuUomyMEbYkRS/OqU=\", false, function () {\n  return [useLocation];\n});\n_c = App;\nconst RootApp = () => /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 45,\n  columnNumber: 3\n}, this);\n_c2 = RootApp;\nexport default RootApp;\n\n// import React, { useEffect, useState } from 'react';\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n// import './App.css';\n// import smooth from \"./utils/smooth\";\n// import link from \"./utils/link\";\n// import AuthPage from './components/auth/AuthPage';\n// import Main from './components/Main';\n// import Login from './components/auth/Login';\n// import Signup from './components/auth/Signup';\n// import ImageUploadCard from './components/card/ImageUploadCard';\n// import Quiz from './components/quiz/Quiz';\n// import BottomNavBar from './components/main/BottomNavBar';\n\n// const App = () => {\n//   const [userList, setUserList] = useState([]); // userList 상태를 App.js에서 관리\n\n//   useEffect(() => {\n//       smooth();\n//       link();\n//   }, []);\n\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Routes>\n//           <Route path=\"/\" element={<AuthPage />} /> \n//           <Route path=\"/login\" element={<Login />} />\n//           <Route path=\"/signup\" element={<Signup userList={userList} setUserList={setUserList} />} />\n//           <Route path=\"/main\" element={<Main />} />\n//           <Route path=\"/imageupload\" element={<ImageUploadCard />} />\n//           <Route path=\"/quiz\" element={<Quiz />} />\n//         </Routes>\n//         {/* 로그인 상태일 때만 BottomNavBar를 보여줌 */}\n//       </div>\n//     </Router>\n//   );\n// }\n\n// export default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"RootApp\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Routes","Route","useLocation","smooth","link","AuthPage","Main","Login","Signup","ImageUploadCard","Quiz","BottomNavBar","jsxDEV","_jsxDEV","App","_s","userList","setUserList","location","isLoggedIn","pathname","className","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","RootApp","_c2","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router, Routes, Route, useLocation } from 'react-router-dom';\r\nimport './App.css';\r\nimport smooth from \"./utils/smooth\";\r\nimport link from \"./utils/link\";\r\nimport AuthPage from './components/auth/AuthPage';\r\nimport Main from './components/Main';\r\nimport Login from './components/auth/Login';\r\nimport Signup from './components/auth/Signup';\r\nimport ImageUploadCard from './components/card/ImageUploadCard';\r\nimport Quiz from './components/quiz/Quiz';\r\nimport BottomNavBar from './components/main/BottomNavBar';\r\n\r\nconst App = () => {\r\n  const [userList, setUserList] = useState([]); // userList 상태를 App.js에서 관리\r\n\r\n  useEffect(() => {\r\n    smooth();\r\n    link();\r\n  }, []);\r\n\r\n  // 현재 위치 (URL 경로)를 가져오는 hook\r\n  const location = useLocation();\r\n\r\n  // 로그인된 상태인지 체크하는 함수 추가\r\n  const isLoggedIn = location.pathname !== '/'; // AuthPage를 제외한 모든 페이지는 로그인 상태로 간주\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<AuthPage />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/signup\" element={<Signup userList={userList} setUserList={setUserList} />} />\r\n        <Route path=\"/main\" element={<Main />} />\r\n        <Route path=\"/imageupload\" element={<ImageUploadCard />} />\r\n        <Route path=\"/quiz\" element={<Quiz />} />\r\n      </Routes>\r\n      {/* 로그인 상태일 때만 BottomNavBar를 보여줌 */}\r\n      {isLoggedIn && <BottomNavBar />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst RootApp = () => (\r\n  <Router>\r\n    <App />\r\n  </Router>\r\n);\r\n\r\nexport default RootApp;\r\n\r\n\r\n// import React, { useEffect, useState } from 'react';\r\n// import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\n// import './App.css';\r\n// import smooth from \"./utils/smooth\";\r\n// import link from \"./utils/link\";\r\n// import AuthPage from './components/auth/AuthPage';\r\n// import Main from './components/Main';\r\n// import Login from './components/auth/Login';\r\n// import Signup from './components/auth/Signup';\r\n// import ImageUploadCard from './components/card/ImageUploadCard';\r\n// import Quiz from './components/quiz/Quiz';\r\n// import BottomNavBar from './components/main/BottomNavBar';\r\n\r\n\r\n// const App = () => {\r\n//   const [userList, setUserList] = useState([]); // userList 상태를 App.js에서 관리\r\n\r\n//   useEffect(() => {\r\n//       smooth();\r\n//       link();\r\n//   }, []);\r\n \r\n//   return (\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <Routes>\r\n//           <Route path=\"/\" element={<AuthPage />} /> \r\n//           <Route path=\"/login\" element={<Login />} />\r\n//           <Route path=\"/signup\" element={<Signup userList={userList} setUserList={setUserList} />} />\r\n//           <Route path=\"/main\" element={<Main />} />\r\n//           <Route path=\"/imageupload\" element={<ImageUploadCard />} />\r\n//           <Route path=\"/quiz\" element={<Quiz />} />\r\n//         </Routes>\r\n//         {/* 로그인 상태일 때만 BottomNavBar를 보여줌 */}\r\n//       </div>\r\n//     </Router>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAQ,kBAAkB;AACtF,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAOC,QAAQ,MAAM,4BAA4B;AACjD,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,OAAOC,eAAe,MAAM,mCAAmC;AAC/D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,YAAY,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9CD,SAAS,CAAC,MAAM;IACdO,MAAM,CAAC,CAAC;IACRC,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMc,QAAQ,GAAGhB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMiB,UAAU,GAAGD,QAAQ,CAACE,QAAQ,KAAK,GAAG,CAAC,CAAC;;EAE9C,oBACEP,OAAA;IAAKQ,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBT,OAAA,CAACb,MAAM;MAAAsB,QAAA,gBACLT,OAAA,CAACZ,KAAK;QAACsB,IAAI,EAAC,GAAG;QAACC,OAAO,eAAEX,OAAA,CAACR,QAAQ;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCf,OAAA,CAACZ,KAAK;QAACsB,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEX,OAAA,CAACN,KAAK;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3Cf,OAAA,CAACZ,KAAK;QAACsB,IAAI,EAAC,SAAS;QAACC,OAAO,eAAEX,OAAA,CAACL,MAAM;UAACQ,QAAQ,EAAEA,QAAS;UAACC,WAAW,EAAEA;QAAY;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3Ff,OAAA,CAACZ,KAAK;QAACsB,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEX,OAAA,CAACP,IAAI;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzCf,OAAA,CAACZ,KAAK;QAACsB,IAAI,EAAC,cAAc;QAACC,OAAO,eAAEX,OAAA,CAACJ,eAAe;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC3Df,OAAA,CAACZ,KAAK;QAACsB,IAAI,EAAC,OAAO;QAACC,OAAO,eAAEX,OAAA,CAACH,IAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EAERT,UAAU,iBAAIN,OAAA,CAACF,YAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAAAb,EAAA,CA5BKD,GAAG;EAAA,QASUZ,WAAW;AAAA;AAAA2B,EAAA,GATxBf,GAAG;AA8BT,MAAMgB,OAAO,GAAGA,CAAA,kBACdjB,OAAA,CAACd,MAAM;EAAAuB,QAAA,eACLT,OAAA,CAACC,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACT;AAACG,GAAA,GAJID,OAAO;AAMb,eAAeA,OAAO;;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}