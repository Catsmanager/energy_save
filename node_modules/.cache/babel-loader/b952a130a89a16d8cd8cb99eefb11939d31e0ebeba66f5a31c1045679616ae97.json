{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\quiz\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Quiz.css'; // 스타일을 위한 별도의 CSS 파일\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    // API 호출로 퀴즈 질문 가져오기 (여기서는 하드코딩된 예시 사용)\n    setQuestions([{\n      id: 1,\n      question: \"Is the Earth round?\",\n      answer: true\n    }, {\n      id: 2,\n      question: \"Is recycling important?\",\n      answer: true\n    }]);\n  }, []);\n  const handleAnswer = userAnswer => {\n    const correct = questions[currentQuestionIndex].answer === userAnswer;\n    setResult(correct ? 'Correct!' : 'Incorrect!');\n\n    // 다음 질문으로 이동\n    setTimeout(() => {\n      setResult(null);\n      if (currentQuestionIndex + 1 < questions.length) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        alert('Quiz Completed!');\n      }\n    }, 1000);\n  };\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question\",\n      children: questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-box\",\n        onClick: () => handleAnswer(true),\n        children: \"O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-box\",\n        onClick: () => handleAnswer(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"O0bXYT7KLWMIk1pHM3hs/Xyz7nw=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","result","setResult","id","question","answer","handleAnswer","userAnswer","correct","setTimeout","length","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/quiz/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Quiz.css'; // 스타일을 위한 별도의 CSS 파일\r\n\r\nfunction Quiz() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [result, setResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // API 호출로 퀴즈 질문 가져오기 (여기서는 하드코딩된 예시 사용)\r\n        setQuestions([\r\n            { id: 1, question: \"Is the Earth round?\", answer: true },\r\n            { id: 2, question: \"Is recycling important?\", answer: true }\r\n        ]);\r\n    }, []);\r\n\r\n    const handleAnswer = (userAnswer) => {\r\n        const correct = questions[currentQuestionIndex].answer === userAnswer;\r\n        setResult(correct ? 'Correct!' : 'Incorrect!');\r\n        \r\n        // 다음 질문으로 이동\r\n        setTimeout(() => {\r\n            setResult(null);\r\n            if (currentQuestionIndex + 1 < questions.length) {\r\n                setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n            } else {\r\n                alert('Quiz Completed!');\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\n    if (questions.length === 0) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div className=\"quiz-container\">\r\n            <h2 className=\"question\">{questions[currentQuestionIndex].question}</h2>\r\n            <div className=\"answer-buttons\">\r\n                <div className=\"answer-box\" onClick={() => handleAnswer(true)}>O</div>\r\n                <div className=\"answer-box\" onClick={() => handleAnswer(false)}>X</div>\r\n            </div>\r\n            {result && <p className=\"result\">{result}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}