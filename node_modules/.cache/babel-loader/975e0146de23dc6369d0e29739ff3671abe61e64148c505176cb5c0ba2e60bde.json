{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\main\\\\CheckList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checklist = ({\n  email\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  useEffect(() => {\n    if (!email) {\n      navigate('/login'); // email이 없으면 로그인 페이지로 리디렉트\n      return;\n    }\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/checklist/user/${email}`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [email, navigate]);\n\n  // 새로운 작업 추가\n  const addTask = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/checklist/add', {\n        email,\n        text: newTask\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setTasks([...tasks, response.data]);\n      setNewTask(\"\");\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  // 작업 삭제\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/checklist/delete/${id}`);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `${email}'s Checklist`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Checklist, \"t0QxcA06hZpewCyfg4ia6wYNUYo=\", false, function () {\n  return [useNavigate];\n});\n_c = Checklist;\nexport default Checklist;\n\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// //일단 사용자가 email, pwd 입력하고 이 페이지로 redirect 되거나? 아니면 불려서 체크리스트\n// //보여주고 하는거같은데 일단 user의 email을 쿠키나 이런데 저장을 할 수있는지\n// //react에서 또 다른 기능을 제공하는지 봐야함\n// //현재 에러는 http://localhost:8080/api/checklist/user/${email} 에서 email이 undefined로\n// //뜨는걸 봐선 위의 에러인거같음. \n// const Checklist = ({ email }) => {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTask, setNewTask] = useState(\"\");\n\n//   // 체크리스트 불러오기\n//   useEffect(() => {\n//     const fetchTasks = async () => {\n//       try {\n//         const response = await axios.get(`http://localhost:8080/api/checklist/user/${email}`, {\n//           headers: { 'Content-Type': 'application/json' }\n//         });\n//         setTasks(response.data);\n//       } catch (error) {\n//         console.error('Error fetching tasks:', error);\n//       }\n//     };\n//     fetchTasks();\n//   }, [email]);\n\n//   // 새로운 작업 추가\n//   const addTask = async () => {\n//     try {\n//       const response = await axios.post('http://localhost:8080/api/checklist/add', \n//         { email, text: newTask }, \n//         {\n//           headers: { 'Content-Type': 'application/json' }\n//         }\n//       );\n//       setTasks([...tasks, response.data]);\n//       setNewTask(\"\");\n//     } catch (error) {\n//       console.error('Error adding task:', error);\n//     }\n//   };\n\n//   // 작업 삭제\n//   const deleteTask = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:8080/api/checklist/delete/${id}`);\n//       setTasks(tasks.filter(task => task.id !== id));\n//     } catch (error) {\n//       console.error('Error deleting task:', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <h2>{`${email}'s Checklist`}</h2>\n//       <ul>\n//         {tasks.map(task => (\n//           <li key={task.id}>\n//             {task.text}\n//             <button onClick={() => deleteTask(task.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//       <input \n//         type=\"text\" \n//         value={newTask} \n//         onChange={e => setNewTask(e.target.value)} \n//         placeholder=\"New Task\" \n//       />\n//       <button onClick={addTask}>Add Task</button>\n//     </div>\n//   );\n// };\n\n// export default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Checklist","email","_s","navigate","tasks","setTasks","newTask","setNewTask","fetchTasks","response","get","headers","data","error","console","addTask","post","text","deleteTask","id","delete","filter","task","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/main/CheckList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Checklist = ({ email }) => {\r\n  const navigate = useNavigate();\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!email) {\r\n      navigate('/login');  // email이 없으면 로그인 페이지로 리디렉트\r\n      return;\r\n    }\r\n\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/checklist/user/${email}`, {\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        setTasks(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [email, navigate]);\r\n\r\n  // 새로운 작업 추가\r\n  const addTask = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/checklist/add', \r\n        { email, text: newTask }, \r\n        { headers: { 'Content-Type': 'application/json' } }\r\n      );\r\n      setTasks([...tasks, response.data]);\r\n      setNewTask(\"\");\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n    }\r\n  };\r\n\r\n  // 작업 삭제\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/api/checklist/delete/${id}`);\r\n      setTasks(tasks.filter(task => task.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`${email}'s Checklist`}</h2>\r\n      <ul>\r\n        {tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.text}\r\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <input \r\n        type=\"text\" \r\n        value={newTask} \r\n        onChange={e => setNewTask(e.target.value)} \r\n        placeholder=\"New Task\" \r\n      />\r\n      <button onClick={addTask}>Add Task</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checklist;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// //일단 사용자가 email, pwd 입력하고 이 페이지로 redirect 되거나? 아니면 불려서 체크리스트\r\n// //보여주고 하는거같은데 일단 user의 email을 쿠키나 이런데 저장을 할 수있는지\r\n// //react에서 또 다른 기능을 제공하는지 봐야함\r\n// //현재 에러는 http://localhost:8080/api/checklist/user/${email} 에서 email이 undefined로\r\n// //뜨는걸 봐선 위의 에러인거같음. \r\n// const Checklist = ({ email }) => {\r\n//   const [tasks, setTasks] = useState([]);\r\n//   const [newTask, setNewTask] = useState(\"\");\r\n\r\n//   // 체크리스트 불러오기\r\n//   useEffect(() => {\r\n//     const fetchTasks = async () => {\r\n//       try {\r\n//         const response = await axios.get(`http://localhost:8080/api/checklist/user/${email}`, {\r\n//           headers: { 'Content-Type': 'application/json' }\r\n//         });\r\n//         setTasks(response.data);\r\n//       } catch (error) {\r\n//         console.error('Error fetching tasks:', error);\r\n//       }\r\n//     };\r\n//     fetchTasks();\r\n//   }, [email]);\r\n\r\n//   // 새로운 작업 추가\r\n//   const addTask = async () => {\r\n//     try {\r\n//       const response = await axios.post('http://localhost:8080/api/checklist/add', \r\n//         { email, text: newTask }, \r\n//         {\r\n//           headers: { 'Content-Type': 'application/json' }\r\n//         }\r\n//       );\r\n//       setTasks([...tasks, response.data]);\r\n//       setNewTask(\"\");\r\n//     } catch (error) {\r\n//       console.error('Error adding task:', error);\r\n//     }\r\n//   };\r\n\r\n//   // 작업 삭제\r\n//   const deleteTask = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:8080/api/checklist/delete/${id}`);\r\n//       setTasks(tasks.filter(task => task.id !== id));\r\n//     } catch (error) {\r\n//       console.error('Error deleting task:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>{`${email}'s Checklist`}</h2>\r\n//       <ul>\r\n//         {tasks.map(task => (\r\n//           <li key={task.id}>\r\n//             {task.text}\r\n//             <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n//           </li>\r\n//         ))}\r\n//       </ul>\r\n//       <input \r\n//         type=\"text\" \r\n//         value={newTask} \r\n//         onChange={e => setNewTask(e.target.value)} \r\n//         placeholder=\"New Task\" \r\n//       />\r\n//       <button onClick={addTask}>Add Task</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Checklist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}