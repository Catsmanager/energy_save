{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\quiz\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../styles/Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  var _questions$currentQue;\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [result, setResult] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      try {\n        const response = await axios.get('http://localhost:8080/api/quiz', {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        setQuestions(response.data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchQuestions();\n  }, []);\n  const handleAnswer = userAnswer => {\n    const correct = questions[currentQuestionIndex].answer === userAnswer;\n    setResult(correct ? 'Correct!' : 'Incorrect!');\n    setTimeout(() => {\n      setResult(null);\n      if (currentQuestionIndex + 1 < questions.length) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        alert('Quiz Completed!');\n      }\n    }, 1000);\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error.message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question\",\n      children: (_questions$currentQue = questions[currentQuestionIndex]) === null || _questions$currentQue === void 0 ? void 0 : _questions$currentQue.qText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-box\",\n        onClick: () => handleAnswer(true),\n        children: \"O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-box\",\n        onClick: () => handleAnswer(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"1FIVdLp+I6IMAk+nWrotr+9FonM=\");\n_c = Quiz;\nexport default Quiz;\n\n// import React, { useState, useEffect } from 'react';\n// import '../styles/Quiz.css'; // 스타일을 위한 별도의 CSS 파일\n\n// function Quiz() {\n//     const [questions, setQuestions] = useState([]);\n//     const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//     const [result, setResult] = useState(null);\n\n//     useEffect(() => {\n//         // API 호출로 퀴즈 질문 가져오기 (여기서는 하드코딩된 예시 사용)\n//         setQuestions([\n//             { id: 1, question: \"Is the Earth round?\", answer: true },\n//             { id: 2, question: \"Is recycling important?\", answer: true }\n//         ]);\n//     }, []);\n\n//     const handleAnswer = (userAnswer) => {\n//         const correct = questions[currentQuestionIndex].answer === userAnswer;\n//         setResult(correct ? 'Correct!' : 'Incorrect!');\n\n//         // 다음 질문으로 이동\n//         setTimeout(() => {\n//             setResult(null);\n//             if (currentQuestionIndex + 1 < questions.length) {\n//                 setCurrentQuestionIndex(currentQuestionIndex + 1);\n//             } else {\n//                 alert('Quiz Completed!');\n//             }\n//         }, 1000);\n//     };\n\n//     if (questions.length === 0) return <div>Loading...</div>;\n\n//     return (\n//         <div className=\"quiz-container\">\n//             <h2 className=\"question\">{questions[currentQuestionIndex].question}</h2>\n//             <div className=\"answer-buttons\">\n//                 <div className=\"answer-box\" onClick={() => handleAnswer(true)}>O</div>\n//                 <div className=\"answer-box\" onClick={() => handleAnswer(false)}>X</div>\n//             </div>\n//             {result && <p className=\"result\">{result}</p>}\n//         </div>\n//     );\n// }\n\n// export default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Quiz","_s","_questions$currentQue","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","result","setResult","loading","setLoading","error","setError","fetchQuestions","response","get","headers","data","handleAnswer","userAnswer","correct","answer","setTimeout","length","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","message","className","qText","onClick","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/quiz/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../styles/Quiz.css';\r\n\r\nfunction Quiz() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [result, setResult] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchQuestions = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:8080/api/quiz', {\r\n                    headers: { 'Content-Type': 'application/json' }\r\n                });\r\n                setQuestions(response.data);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                setError(error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchQuestions();\r\n    }, []);\r\n\r\n    const handleAnswer = (userAnswer) => {\r\n        const correct = questions[currentQuestionIndex].answer === userAnswer;\r\n        setResult(correct ? 'Correct!' : 'Incorrect!');\r\n\r\n        setTimeout(() => {\r\n            setResult(null);\r\n            if (currentQuestionIndex + 1 < questions.length) {\r\n                setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n            } else {\r\n                alert('Quiz Completed!');\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\n    if (loading) return <div>Loading...</div>;\r\n    if (error) return <div>Error: {error.message}</div>;\r\n\r\n    return (\r\n        <div className=\"quiz-container\">\r\n            <h2 className=\"question\">{questions[currentQuestionIndex]?.qText}</h2>\r\n            <div className=\"answer-buttons\">\r\n                <div className=\"answer-box\" onClick={() => handleAnswer(true)}>O</div>\r\n                <div className=\"answer-box\" onClick={() => handleAnswer(false)}>X</div>\r\n            </div>\r\n            {result && <p className=\"result\">{result}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import '../styles/Quiz.css'; // 스타일을 위한 별도의 CSS 파일\r\n\r\n// function Quiz() {\r\n//     const [questions, setQuestions] = useState([]);\r\n//     const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n//     const [result, setResult] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         // API 호출로 퀴즈 질문 가져오기 (여기서는 하드코딩된 예시 사용)\r\n//         setQuestions([\r\n//             { id: 1, question: \"Is the Earth round?\", answer: true },\r\n//             { id: 2, question: \"Is recycling important?\", answer: true }\r\n//         ]);\r\n//     }, []);\r\n\r\n//     const handleAnswer = (userAnswer) => {\r\n//         const correct = questions[currentQuestionIndex].answer === userAnswer;\r\n//         setResult(correct ? 'Correct!' : 'Incorrect!');\r\n        \r\n//         // 다음 질문으로 이동\r\n//         setTimeout(() => {\r\n//             setResult(null);\r\n//             if (currentQuestionIndex + 1 < questions.length) {\r\n//                 setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n//             } else {\r\n//                 alert('Quiz Completed!');\r\n//             }\r\n//         }, 1000);\r\n//     };\r\n\r\n//     if (questions.length === 0) return <div>Loading...</div>;\r\n\r\n//     return (\r\n//         <div className=\"quiz-container\">\r\n//             <h2 className=\"question\">{questions[currentQuestionIndex].question}</h2>\r\n//             <div className=\"answer-buttons\">\r\n//                 <div className=\"answer-box\" onClick={() => handleAnswer(true)}>O</div>\r\n//                 <div className=\"answer-box\" onClick={() => handleAnswer(false)}>X</div>\r\n//             </div>\r\n//             {result && <p className=\"result\">{result}</p>}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}