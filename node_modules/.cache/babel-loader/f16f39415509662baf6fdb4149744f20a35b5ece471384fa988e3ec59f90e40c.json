{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\quiz\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../styles/Quiz.css'; // 스타일을 위한 별도의 CSS 파일\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Quiz() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [result, setResult] = useState(null);\n  useEffect(() => {\n    // API 호출로 퀴즈 질문 가져오기\n    fetch('/api/quiz').then(response => response.json()).then(data => setQuestions(data));\n  }, []);\n  const handleAnswer = userAnswer => {\n    const correct = questions[currentQuestionIndex].answer === userAnswer;\n    setResult(correct ? 'Correct!' : 'Incorrect!');\n\n    // 다음 질문으로 이동\n    setTimeout(() => {\n      setResult(null);\n      if (currentQuestionIndex + 1 < questions.length) {\n        setCurrentQuestionIndex(currentQuestionIndex + 1);\n      } else {\n        alert('Quiz Completed!');\n      }\n    }, 1000);\n  };\n  if (questions.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 40\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question\",\n      children: questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answer-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-box\",\n        onClick: () => handleAnswer(true),\n        children: \"O\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer-box\",\n        onClick: () => handleAnswer(false),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"result\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Quiz, \"O0bXYT7KLWMIk1pHM3hs/Xyz7nw=\");\n_c = Quiz;\nexport default Quiz;\n\n// import React, { useState, useEffect } from 'react';\n// import '../styles/Quiz.css'; // 스타일을 위한 별도의 CSS 파일\n\n// function Quiz() {\n//     const [questions, setQuestions] = useState([]);\n//     const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n//     const [result, setResult] = useState(null);\n\n//     useEffect(() => {\n//         // API 호출로 퀴즈 질문 가져오기 (여기서는 하드코딩된 예시 사용)\n//         setQuestions([\n//             { id: 1, question: \"Is the Earth round?\", answer: true },\n//             { id: 2, question: \"Is recycling important?\", answer: true }\n//         ]);\n//     }, []);\n\n//     const handleAnswer = (userAnswer) => {\n//         const correct = questions[currentQuestionIndex].answer === userAnswer;\n//         setResult(correct ? 'Correct!' : 'Incorrect!');\n\n//         // 다음 질문으로 이동\n//         setTimeout(() => {\n//             setResult(null);\n//             if (currentQuestionIndex + 1 < questions.length) {\n//                 setCurrentQuestionIndex(currentQuestionIndex + 1);\n//             } else {\n//                 alert('Quiz Completed!');\n//             }\n//         }, 1000);\n//     };\n\n//     if (questions.length === 0) return <div>Loading...</div>;\n\n//     return (\n//         <div className=\"quiz-container\">\n//             <h2 className=\"question\">{questions[currentQuestionIndex].question}</h2>\n//             <div className=\"answer-buttons\">\n//                 <div className=\"answer-box\" onClick={() => handleAnswer(true)}>O</div>\n//                 <div className=\"answer-box\" onClick={() => handleAnswer(false)}>X</div>\n//             </div>\n//             {result && <p className=\"result\">{result}</p>}\n//         </div>\n//     );\n// }\n\n// export default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Quiz","_s","questions","setQuestions","currentQuestionIndex","setCurrentQuestionIndex","result","setResult","fetch","then","response","json","data","handleAnswer","userAnswer","correct","answer","setTimeout","length","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","className","question","onClick","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/quiz/Quiz.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/Quiz.css'; // 스타일을 위한 별도의 CSS 파일\r\n\r\nfunction Quiz() {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [result, setResult] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // API 호출로 퀴즈 질문 가져오기\r\n        fetch('/api/quiz')\r\n            .then(response => response.json())\r\n            .then(data => setQuestions(data));\r\n    }, []);\r\n\r\n    const handleAnswer = (userAnswer) => {\r\n        const correct = questions[currentQuestionIndex].answer === userAnswer;\r\n        setResult(correct ? 'Correct!' : 'Incorrect!');\r\n        \r\n        // 다음 질문으로 이동\r\n        setTimeout(() => {\r\n            setResult(null);\r\n            if (currentQuestionIndex + 1 < questions.length) {\r\n                setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n            } else {\r\n                alert('Quiz Completed!');\r\n            }\r\n        }, 1000);\r\n    };\r\n\r\n    if (questions.length === 0) return <div>Loading...</div>;\r\n\r\n    return (\r\n        <div className=\"quiz-container\">\r\n            <h2 className=\"question\">{questions[currentQuestionIndex].question}</h2>\r\n            <div className=\"answer-buttons\">\r\n                <div className=\"answer-box\" onClick={() => handleAnswer(true)}>O</div>\r\n                <div className=\"answer-box\" onClick={() => handleAnswer(false)}>X</div>\r\n            </div>\r\n            {result && <p className=\"result\">{result}</p>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quiz;\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from 'react';\r\n// import '../styles/Quiz.css'; // 스타일을 위한 별도의 CSS 파일\r\n\r\n// function Quiz() {\r\n//     const [questions, setQuestions] = useState([]);\r\n//     const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n//     const [result, setResult] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         // API 호출로 퀴즈 질문 가져오기 (여기서는 하드코딩된 예시 사용)\r\n//         setQuestions([\r\n//             { id: 1, question: \"Is the Earth round?\", answer: true },\r\n//             { id: 2, question: \"Is recycling important?\", answer: true }\r\n//         ]);\r\n//     }, []);\r\n\r\n//     const handleAnswer = (userAnswer) => {\r\n//         const correct = questions[currentQuestionIndex].answer === userAnswer;\r\n//         setResult(correct ? 'Correct!' : 'Incorrect!');\r\n        \r\n//         // 다음 질문으로 이동\r\n//         setTimeout(() => {\r\n//             setResult(null);\r\n//             if (currentQuestionIndex + 1 < questions.length) {\r\n//                 setCurrentQuestionIndex(currentQuestionIndex + 1);\r\n//             } else {\r\n//                 alert('Quiz Completed!');\r\n//             }\r\n//         }, 1000);\r\n//     };\r\n\r\n//     if (questions.length === 0) return <div>Loading...</div>;\r\n\r\n//     return (\r\n//         <div className=\"quiz-container\">\r\n//             <h2 className=\"question\">{questions[currentQuestionIndex].question}</h2>\r\n//             <div className=\"answer-buttons\">\r\n//                 <div className=\"answer-box\" onClick={() => handleAnswer(true)}>O</div>\r\n//                 <div className=\"answer-box\" onClick={() => handleAnswer(false)}>X</div>\r\n//             </div>\r\n//             {result && <p className=\"result\">{result}</p>}\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Quiz;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}