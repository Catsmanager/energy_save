{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\main\\\\CheckList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Checklist = ({\n  email\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n\n  // 체크리스트 불러오기\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/api/checklist/user/${email}`, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        setTasks(response.data);\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [email]);\n\n  // 새로운 작업 추가\n  const addTask = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/checklist/add', {\n        email,\n        text: newTask\n      }, {\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      setTasks([...tasks, response.data]);\n      setNewTask(\"\");\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  // 작업 삭제\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:8080/api/checklist/delete/${id}`);\n      setTasks(tasks.filter(task => task.id !== id));\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: `${email}'s Checklist`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.text, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Checklist, \"MVDLnJyLcavc0PNJLnR8NMYsH5o=\");\n_c = Checklist;\nexport default Checklist;\nvar _c;\n$RefreshReg$(_c, \"Checklist\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Checklist","email","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","get","headers","data","error","console","addTask","post","text","deleteTask","id","delete","filter","task","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/main/CheckList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Checklist = ({ email }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  // 체크리스트 불러오기\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:8080/api/checklist/user/${email}`, {\r\n          headers: { 'Content-Type': 'application/json' }\r\n        });\r\n        setTasks(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n    fetchTasks();\r\n  }, [email]);\r\n\r\n  // 새로운 작업 추가\r\n  const addTask = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:8080/api/checklist/add', \r\n        { email, text: newTask }, \r\n        {\r\n          headers: { 'Content-Type': 'application/json' }\r\n        }\r\n      );\r\n      setTasks([...tasks, response.data]);\r\n      setNewTask(\"\");\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n    }\r\n  };\r\n\r\n  // 작업 삭제\r\n  const deleteTask = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:8080/api/checklist/delete/${id}`);\r\n      setTasks(tasks.filter(task => task.id !== id));\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{`${email}'s Checklist`}</h2>\r\n      <ul>\r\n        {tasks.map(task => (\r\n          <li key={task.id}>\r\n            {task.text}\r\n            <button onClick={() => deleteTask(task.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <input \r\n        type=\"text\" \r\n        value={newTask} \r\n        onChange={e => setNewTask(e.target.value)} \r\n        placeholder=\"New Task\" \r\n      />\r\n      <button onClick={addTask}>Add Task</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Checklist;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}