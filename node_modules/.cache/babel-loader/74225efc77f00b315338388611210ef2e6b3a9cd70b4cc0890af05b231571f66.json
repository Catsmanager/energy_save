{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC774\\uBBF8\\uB9BC\\\\Desktop\\\\test1\\\\sample\\\\src\\\\components\\\\pages\\\\Calender.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/Calendar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [months, setMonths] = useState([new Date()]); // 렌더링할 달을 배열로 관리\n  const loadMoreRef = useRef(null); // 다음 달을 로드할 요소의 참조\n\n  const getDaysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\n  const getFirstDayOfMonth = (month, year) => new Date(year, month, 1).getDay();\n\n  // 스크롤 감지 및 다음 달 로딩\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      if (entries[0].isIntersecting) {\n        loadNextMonth();\n      }\n    }, {\n      threshold: 1.0\n    });\n    if (loadMoreRef.current) {\n      observer.observe(loadMoreRef.current);\n    }\n    return () => observer.disconnect();\n  }, [months]);\n  const loadNextMonth = () => {\n    const lastMonth = months[months.length - 1];\n    const nextMonth = new Date(lastMonth.getFullYear(), lastMonth.getMonth() + 1);\n    setMonths([...months, nextMonth]);\n  };\n  const renderMonth = date => {\n    const daysInMonth = getDaysInMonth(date.getMonth(), date.getFullYear());\n    const firstDay = getFirstDayOfMonth(date.getMonth(), date.getFullYear());\n    const weeks = [];\n    let days = [];\n    for (let i = 0; i < firstDay; i++) {\n      days.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"empty\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this));\n    }\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push( /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"day\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this));\n      if ((firstDay + day) % 7 === 0) {\n        weeks.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: days\n        }, `week-${weeks.length}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 20\n        }, this));\n        days = [];\n      }\n    }\n    if (days.length > 0) {\n      weeks.push( /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: days\n      }, `week-${weeks.length}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: date.toLocaleDateString('ko-KR', {\n          month: 'long',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Wed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Thu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: weeks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, date.getMonth(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"month-year\",\n        children: currentDate.toLocaleDateString('ko-KR', {\n          month: 'long',\n          year: 'numeric'\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrow-button\",\n        onClick: () => handlePrevMonth(),\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"arrow-button\",\n        onClick: () => handleNextMonth(),\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), months.map(month => renderMonth(month)), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: loadMoreRef,\n      style: {\n        height: '50px',\n        backgroundColor: 'lightgray'\n      },\n      children: \"Loading more...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"7xM51fWi1r8gClti3bO/PLMiXUI=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Calendar","_s","currentDate","setCurrentDate","Date","months","setMonths","loadMoreRef","getDaysInMonth","month","year","getDate","getFirstDayOfMonth","getDay","observer","IntersectionObserver","entries","isIntersecting","loadNextMonth","threshold","current","observe","disconnect","lastMonth","length","nextMonth","getFullYear","getMonth","renderMonth","date","daysInMonth","firstDay","weeks","days","i","push","className","fileName","_jsxFileName","lineNumber","columnNumber","day","children","toLocaleDateString","onClick","handlePrevMonth","handleNextMonth","map","ref","style","height","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/이미림/Desktop/test1/sample/src/components/pages/Calender.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport '../styles/Calendar.css';\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [months, setMonths] = useState([new Date()]); // 렌더링할 달을 배열로 관리\r\n  const loadMoreRef = useRef(null); // 다음 달을 로드할 요소의 참조\r\n\r\n  const getDaysInMonth = (month, year) => new Date(year, month + 1, 0).getDate();\r\n  const getFirstDayOfMonth = (month, year) => new Date(year, month, 1).getDay();\r\n\r\n  // 스크롤 감지 및 다음 달 로딩\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver(\r\n      (entries) => {\r\n        if (entries[0].isIntersecting) {\r\n          loadNextMonth();\r\n        }\r\n      },\r\n      { threshold: 1.0 }\r\n    );\r\n    if (loadMoreRef.current) {\r\n      observer.observe(loadMoreRef.current);\r\n    }\r\n    return () => observer.disconnect();\r\n  }, [months]);\r\n\r\n  const loadNextMonth = () => {\r\n    const lastMonth = months[months.length - 1];\r\n    const nextMonth = new Date(lastMonth.getFullYear(), lastMonth.getMonth() + 1);\r\n    setMonths([...months, nextMonth]);\r\n  };\r\n\r\n  const renderMonth = (date) => {\r\n    const daysInMonth = getDaysInMonth(date.getMonth(), date.getFullYear());\r\n    const firstDay = getFirstDayOfMonth(date.getMonth(), date.getFullYear());\r\n    \r\n    const weeks = [];\r\n    let days = [];\r\n\r\n    for (let i = 0; i < firstDay; i++) {\r\n      days.push(<td key={`empty-${i}`} className=\"empty\"></td>);\r\n    }\r\n\r\n    for (let day = 1; day <= daysInMonth; day++) {\r\n      days.push(\r\n        <td key={day} className=\"day\">{day}</td>\r\n      );\r\n\r\n      if ((firstDay + day) % 7 === 0) {\r\n        weeks.push(<tr key={`week-${weeks.length}`}>{days}</tr>);\r\n        days = [];\r\n      }\r\n    }\r\n\r\n    if (days.length > 0) {\r\n      weeks.push(<tr key={`week-${weeks.length}`}>{days}</tr>);\r\n    }\r\n\r\n    return (\r\n      <div key={date.getMonth()}>\r\n        <h3>{date.toLocaleDateString('ko-KR', { month: 'long', year: 'numeric' })}</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Sun</th>\r\n              <th>Mon</th>\r\n              <th>Tue</th>\r\n              <th>Wed</th>\r\n              <th>Thu</th>\r\n              <th>Fri</th>\r\n              <th>Sat</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {weeks}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <div className=\"header\">\r\n        <span className=\"month-year\">{currentDate.toLocaleDateString('ko-KR', { month: 'long', year: 'numeric' })}</span>\r\n        <button className=\"arrow-button\" onClick={() => handlePrevMonth()}>&lt;</button>\r\n        <button className=\"arrow-button\" onClick={() => handleNextMonth()}>&gt;</button>\r\n      </div>\r\n      {months.map((month) => renderMonth(month))}\r\n      {/* 다음 달을 로드할 요소 */}\r\n      <div ref={loadMoreRef} style={{ height: '50px', backgroundColor: 'lightgray' }}>\r\n        Loading more...\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAIS,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,CAAC,IAAIS,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMG,WAAW,GAAGV,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;;EAElC,MAAMW,cAAc,GAAGA,CAACC,KAAK,EAAEC,IAAI,KAAK,IAAIN,IAAI,CAACM,IAAI,EAAED,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAACE,OAAO,CAAC,CAAC;EAC9E,MAAMC,kBAAkB,GAAGA,CAACH,KAAK,EAAEC,IAAI,KAAK,IAAIN,IAAI,CAACM,IAAI,EAAED,KAAK,EAAE,CAAC,CAAC,CAACI,MAAM,CAAC,CAAC;;EAE7E;EACAjB,SAAS,CAAC,MAAM;IACd,MAAMkB,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACX,IAAIA,OAAO,CAAC,CAAC,CAAC,CAACC,cAAc,EAAE;QAC7BC,aAAa,CAAC,CAAC;MACjB;IACF,CAAC,EACD;MAAEC,SAAS,EAAE;IAAI,CACnB,CAAC;IACD,IAAIZ,WAAW,CAACa,OAAO,EAAE;MACvBN,QAAQ,CAACO,OAAO,CAACd,WAAW,CAACa,OAAO,CAAC;IACvC;IACA,OAAO,MAAMN,QAAQ,CAACQ,UAAU,CAAC,CAAC;EACpC,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,MAAMa,aAAa,GAAGA,CAAA,KAAM;IAC1B,MAAMK,SAAS,GAAGlB,MAAM,CAACA,MAAM,CAACmB,MAAM,GAAG,CAAC,CAAC;IAC3C,MAAMC,SAAS,GAAG,IAAIrB,IAAI,CAACmB,SAAS,CAACG,WAAW,CAAC,CAAC,EAAEH,SAAS,CAACI,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAC7ErB,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEoB,SAAS,CAAC,CAAC;EACnC,CAAC;EAED,MAAMG,WAAW,GAAIC,IAAI,IAAK;IAC5B,MAAMC,WAAW,GAAGtB,cAAc,CAACqB,IAAI,CAACF,QAAQ,CAAC,CAAC,EAAEE,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC;IACvE,MAAMK,QAAQ,GAAGnB,kBAAkB,CAACiB,IAAI,CAACF,QAAQ,CAAC,CAAC,EAAEE,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC;IAExE,MAAMM,KAAK,GAAG,EAAE;IAChB,IAAIC,IAAI,GAAG,EAAE;IAEb,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,QAAQ,EAAEG,CAAC,EAAE,EAAE;MACjCD,IAAI,CAACE,IAAI,eAACpC,OAAA;QAAuBqC,SAAS,EAAC;MAAO,GAA/B,SAASF,CAAC,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAwB,CAAC,CAAC;IAC3D;IAEA,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,IAAIX,WAAW,EAAEW,GAAG,EAAE,EAAE;MAC3CR,IAAI,CAACE,IAAI,eACPpC,OAAA;QAAcqC,SAAS,EAAC,KAAK;QAAAM,QAAA,EAAED;MAAG,GAAzBA,GAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CACzC,CAAC;MAED,IAAI,CAACT,QAAQ,GAAGU,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QAC9BT,KAAK,CAACG,IAAI,eAACpC,OAAA;UAAA2C,QAAA,EAAkCT;QAAI,GAA7B,QAAQD,KAAK,CAACR,MAAM,EAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,CAAC;QACxDP,IAAI,GAAG,EAAE;MACX;IACF;IAEA,IAAIA,IAAI,CAACT,MAAM,GAAG,CAAC,EAAE;MACnBQ,KAAK,CAACG,IAAI,eAACpC,OAAA;QAAA2C,QAAA,EAAkCT;MAAI,GAA7B,QAAQD,KAAK,CAACR,MAAM,EAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,CAAC;IAC1D;IAEA,oBACEzC,OAAA;MAAA2C,QAAA,gBACE3C,OAAA;QAAA2C,QAAA,EAAKb,IAAI,CAACc,kBAAkB,CAAC,OAAO,EAAE;UAAElC,KAAK,EAAE,MAAM;UAAEC,IAAI,EAAE;QAAU,CAAC;MAAC;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/EzC,OAAA;QAAA2C,QAAA,gBACE3C,OAAA;UAAA2C,QAAA,eACE3C,OAAA;YAAA2C,QAAA,gBACE3C,OAAA;cAAA2C,QAAA,EAAI;YAAG;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZzC,OAAA;cAAA2C,QAAA,EAAI;YAAG;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZzC,OAAA;cAAA2C,QAAA,EAAI;YAAG;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZzC,OAAA;cAAA2C,QAAA,EAAI;YAAG;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZzC,OAAA;cAAA2C,QAAA,EAAI;YAAG;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZzC,OAAA;cAAA2C,QAAA,EAAI;YAAG;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZzC,OAAA;cAAA2C,QAAA,EAAI;YAAG;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRzC,OAAA;UAAA2C,QAAA,EACGV;QAAK;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,GAjBAX,IAAI,CAACF,QAAQ,CAAC,CAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAkBpB,CAAC;EAEV,CAAC;EAED,oBACEzC,OAAA;IAAKqC,SAAS,EAAC,UAAU;IAAAM,QAAA,gBACvB3C,OAAA;MAAKqC,SAAS,EAAC,QAAQ;MAAAM,QAAA,gBACrB3C,OAAA;QAAMqC,SAAS,EAAC,YAAY;QAAAM,QAAA,EAAExC,WAAW,CAACyC,kBAAkB,CAAC,OAAO,EAAE;UAAElC,KAAK,EAAE,MAAM;UAAEC,IAAI,EAAE;QAAU,CAAC;MAAC;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACjHzC,OAAA;QAAQqC,SAAS,EAAC,cAAc;QAACQ,OAAO,EAAEA,CAAA,KAAMC,eAAe,CAAC,CAAE;QAAAH,QAAA,EAAC;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAChFzC,OAAA;QAAQqC,SAAS,EAAC,cAAc;QAACQ,OAAO,EAAEA,CAAA,KAAME,eAAe,CAAC,CAAE;QAAAJ,QAAA,EAAC;MAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E,CAAC,EACLnC,MAAM,CAAC0C,GAAG,CAAEtC,KAAK,IAAKmB,WAAW,CAACnB,KAAK,CAAC,CAAC,eAE1CV,OAAA;MAAKiD,GAAG,EAAEzC,WAAY;MAAC0C,KAAK,EAAE;QAAEC,MAAM,EAAE,MAAM;QAAEC,eAAe,EAAE;MAAY,CAAE;MAAAT,QAAA,EAAC;IAEhF;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvC,EAAA,CA7FID,QAAQ;AAAAoD,EAAA,GAARpD,QAAQ;AA+Fd,eAAeA,QAAQ;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}